
f4_11_Systick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001cc0  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  08001e70  08001e70  00002e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001eb8  08001eb8  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001eb8  08001eb8  00002eb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001ec0  08001ec0  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ec0  08001ec0  00002ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001ec4  08001ec4  00002ec4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001ec8  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000123a  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000006b5  00000000  00000000  000042c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001b0  00000000  00000000  00004980  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000124  00000000  00000000  00004b30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c02  00000000  00000000  00004c54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002969  00000000  00000000  00007856  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009a5bc  00000000  00000000  0000a1bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a477b  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000e94  00000000  00000000  000a47c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007f  00000000  00000000  000a5654  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000005c 	.word	0x2000005c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001e58 	.word	0x08001e58

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000060 	.word	0x20000060
 80001ec:	08001e58 	.word	0x08001e58

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_d2iz>:
 8000b3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b40:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b44:	d215      	bcs.n	8000b72 <__aeabi_d2iz+0x36>
 8000b46:	d511      	bpl.n	8000b6c <__aeabi_d2iz+0x30>
 8000b48:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b4c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b50:	d912      	bls.n	8000b78 <__aeabi_d2iz+0x3c>
 8000b52:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b56:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b5a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b5e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b62:	fa23 f002 	lsr.w	r0, r3, r2
 8000b66:	bf18      	it	ne
 8000b68:	4240      	negne	r0, r0
 8000b6a:	4770      	bx	lr
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b76:	d105      	bne.n	8000b84 <__aeabi_d2iz+0x48>
 8000b78:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b7c:	bf08      	it	eq
 8000b7e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b82:	4770      	bx	lr
 8000b84:	f04f 0000 	mov.w	r0, #0
 8000b88:	4770      	bx	lr
 8000b8a:	bf00      	nop

08000b8c <__aeabi_d2uiz>:
 8000b8c:	004a      	lsls	r2, r1, #1
 8000b8e:	d211      	bcs.n	8000bb4 <__aeabi_d2uiz+0x28>
 8000b90:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b94:	d211      	bcs.n	8000bba <__aeabi_d2uiz+0x2e>
 8000b96:	d50d      	bpl.n	8000bb4 <__aeabi_d2uiz+0x28>
 8000b98:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b9c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ba0:	d40e      	bmi.n	8000bc0 <__aeabi_d2uiz+0x34>
 8000ba2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ba6:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000baa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bae:	fa23 f002 	lsr.w	r0, r3, r2
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bbe:	d102      	bne.n	8000bc6 <__aeabi_d2uiz+0x3a>
 8000bc0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bc4:	4770      	bx	lr
 8000bc6:	f04f 0000 	mov.w	r0, #0
 8000bca:	4770      	bx	lr

08000bcc <LED_init>:
#include "stm32f4xx.h"	// STM32F4 library

#define LED_PIN (1u<<13)
#define GPIOGEN (1u<<6)

void LED_init(){
 8000bcc:	b480      	push	{r7}
 8000bce:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOGEN;
 8000bd0:	4b0b      	ldr	r3, [pc, #44]	@ (8000c00 <LED_init+0x34>)
 8000bd2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bd4:	4a0a      	ldr	r2, [pc, #40]	@ (8000c00 <LED_init+0x34>)
 8000bd6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000bda:	6313      	str	r3, [r2, #48]	@ 0x30

	GPIOG->MODER &= ~(3U<<(13*2));
 8000bdc:	4b09      	ldr	r3, [pc, #36]	@ (8000c04 <LED_init+0x38>)
 8000bde:	681b      	ldr	r3, [r3, #0]
 8000be0:	4a08      	ldr	r2, [pc, #32]	@ (8000c04 <LED_init+0x38>)
 8000be2:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 8000be6:	6013      	str	r3, [r2, #0]
	GPIOG->MODER |= (1U<<(13*2));
 8000be8:	4b06      	ldr	r3, [pc, #24]	@ (8000c04 <LED_init+0x38>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	4a05      	ldr	r2, [pc, #20]	@ (8000c04 <LED_init+0x38>)
 8000bee:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000bf2:	6013      	str	r3, [r2, #0]
}
 8000bf4:	bf00      	nop
 8000bf6:	46bd      	mov	sp, r7
 8000bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bfc:	4770      	bx	lr
 8000bfe:	bf00      	nop
 8000c00:	40023800 	.word	0x40023800
 8000c04:	40021800 	.word	0x40021800

08000c08 <LED_toggle>:

void LED_OFF(){
	GPIOG->ODR &= ~LED_PIN;
}

void LED_toggle(int delay){
 8000c08:	b480      	push	{r7}
 8000c0a:	b085      	sub	sp, #20
 8000c0c:	af00      	add	r7, sp, #0
 8000c0e:	6078      	str	r0, [r7, #4]
	GPIOG->ODR ^= LED_PIN;
 8000c10:	4b0b      	ldr	r3, [pc, #44]	@ (8000c40 <LED_toggle+0x38>)
 8000c12:	695b      	ldr	r3, [r3, #20]
 8000c14:	4a0a      	ldr	r2, [pc, #40]	@ (8000c40 <LED_toggle+0x38>)
 8000c16:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8000c1a:	6153      	str	r3, [r2, #20]
	for(volatile int i=0;i<=delay;i++);
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	60fb      	str	r3, [r7, #12]
 8000c20:	e002      	b.n	8000c28 <LED_toggle+0x20>
 8000c22:	68fb      	ldr	r3, [r7, #12]
 8000c24:	3301      	adds	r3, #1
 8000c26:	60fb      	str	r3, [r7, #12]
 8000c28:	68fb      	ldr	r3, [r7, #12]
 8000c2a:	687a      	ldr	r2, [r7, #4]
 8000c2c:	429a      	cmp	r2, r3
 8000c2e:	daf8      	bge.n	8000c22 <LED_toggle+0x1a>
}
 8000c30:	bf00      	nop
 8000c32:	bf00      	nop
 8000c34:	3714      	adds	r7, #20
 8000c36:	46bd      	mov	sp, r7
 8000c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop
 8000c40:	40021800 	.word	0x40021800

08000c44 <_write>:
/* _write is a weak function called when using printf()
 * It is called before __io_putchar but is used in more general newlib hence prefered
 * */


int _write(int file, char *ptr, int len) { // All correct arguments are passed by printf
 8000c44:	b580      	push	{r7, lr}
 8000c46:	b086      	sub	sp, #24
 8000c48:	af00      	add	r7, sp, #0
 8000c4a:	60f8      	str	r0, [r7, #12]
 8000c4c:	60b9      	str	r1, [r7, #8]
 8000c4e:	607a      	str	r2, [r7, #4]
    for (int i = 0; i < len; i++) {
 8000c50:	2300      	movs	r3, #0
 8000c52:	617b      	str	r3, [r7, #20]
 8000c54:	e009      	b.n	8000c6a <_write+0x26>
        usart1_write(ptr[i]);
 8000c56:	697b      	ldr	r3, [r7, #20]
 8000c58:	68ba      	ldr	r2, [r7, #8]
 8000c5a:	4413      	add	r3, r2
 8000c5c:	781b      	ldrb	r3, [r3, #0]
 8000c5e:	4618      	mov	r0, r3
 8000c60:	f000 f84c 	bl	8000cfc <usart1_write>
    for (int i = 0; i < len; i++) {
 8000c64:	697b      	ldr	r3, [r7, #20]
 8000c66:	3301      	adds	r3, #1
 8000c68:	617b      	str	r3, [r7, #20]
 8000c6a:	697a      	ldr	r2, [r7, #20]
 8000c6c:	687b      	ldr	r3, [r7, #4]
 8000c6e:	429a      	cmp	r2, r3
 8000c70:	dbf1      	blt.n	8000c56 <_write+0x12>
    }
    return len;
 8000c72:	687b      	ldr	r3, [r7, #4]
}
 8000c74:	4618      	mov	r0, r3
 8000c76:	3718      	adds	r7, #24
 8000c78:	46bd      	mov	sp, r7
 8000c7a:	bd80      	pop	{r7, pc}

08000c7c <usart1_tx_init>:

void usart1_tx_init(void){
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	af00      	add	r7, sp, #0
	/************Configure USART GPIO pins***********/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8000c80:	4b1a      	ldr	r3, [pc, #104]	@ (8000cec <usart1_tx_init+0x70>)
 8000c82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c84:	4a19      	ldr	r2, [pc, #100]	@ (8000cec <usart1_tx_init+0x70>)
 8000c86:	f043 0301 	orr.w	r3, r3, #1
 8000c8a:	6313      	str	r3, [r2, #48]	@ 0x30

	/*Set PA09 to alternate function mode*/
	GPIOA->MODER &= ~(1U<<18);
 8000c8c:	4b18      	ldr	r3, [pc, #96]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000c8e:	681b      	ldr	r3, [r3, #0]
 8000c90:	4a17      	ldr	r2, [pc, #92]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000c92:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000c96:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<19);
 8000c98:	4b15      	ldr	r3, [pc, #84]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000c9a:	681b      	ldr	r3, [r3, #0]
 8000c9c:	4a14      	ldr	r2, [pc, #80]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000c9e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000ca2:	6013      	str	r3, [r2, #0]
	/* Note : There is no AFRL/AFRH in ST header, instead
	 * AFR[0] = AFRL
	 * AFR[1] = AFRH
	 */

	GPIOA->AFR[1] &= ~(0xFU<<4);
 8000ca4:	4b12      	ldr	r3, [pc, #72]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000ca6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000ca8:	4a11      	ldr	r2, [pc, #68]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000caa:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000cae:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOA->AFR[1] |=  (0x7U<<4);
 8000cb0:	4b0f      	ldr	r3, [pc, #60]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000cb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000cb4:	4a0e      	ldr	r2, [pc, #56]	@ (8000cf0 <usart1_tx_init+0x74>)
 8000cb6:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
 8000cba:	6253      	str	r3, [r2, #36]	@ 0x24

	/************Configure USART Module***********/
	/*Enable clock access to USART1*/
	RCC->APB2ENR |= USART1EN;
 8000cbc:	4b0b      	ldr	r3, [pc, #44]	@ (8000cec <usart1_tx_init+0x70>)
 8000cbe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000cc0:	4a0a      	ldr	r2, [pc, #40]	@ (8000cec <usart1_tx_init+0x70>)
 8000cc2:	f043 0310 	orr.w	r3, r3, #16
 8000cc6:	6453      	str	r3, [r2, #68]	@ 0x44

	/*Configure USART Baud rate*/
	uart_set_baudrate(USART1,APB2_CLK,UART_BAUDRATE);
 8000cc8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000ccc:	4909      	ldr	r1, [pc, #36]	@ (8000cf4 <usart1_tx_init+0x78>)
 8000cce:	480a      	ldr	r0, [pc, #40]	@ (8000cf8 <usart1_tx_init+0x7c>)
 8000cd0:	f000 f82c 	bl	8000d2c <uart_set_baudrate>

	/*Configure transfer direction*/
	/* For transmission */
	USART1->CR1 = CR1_TE;
 8000cd4:	4b08      	ldr	r3, [pc, #32]	@ (8000cf8 <usart1_tx_init+0x7c>)
 8000cd6:	2208      	movs	r2, #8
 8000cd8:	60da      	str	r2, [r3, #12]

	/*Enable USART module*/
	USART1->CR1 |= CR1_UE;
 8000cda:	4b07      	ldr	r3, [pc, #28]	@ (8000cf8 <usart1_tx_init+0x7c>)
 8000cdc:	68db      	ldr	r3, [r3, #12]
 8000cde:	4a06      	ldr	r2, [pc, #24]	@ (8000cf8 <usart1_tx_init+0x7c>)
 8000ce0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000ce4:	60d3      	str	r3, [r2, #12]
}
 8000ce6:	bf00      	nop
 8000ce8:	bd80      	pop	{r7, pc}
 8000cea:	bf00      	nop
 8000cec:	40023800 	.word	0x40023800
 8000cf0:	40020000 	.word	0x40020000
 8000cf4:	00f42400 	.word	0x00f42400
 8000cf8:	40011000 	.word	0x40011000

08000cfc <usart1_write>:

	/*Read transmitted data register*/
	return USART1->DR;
}

void usart1_write(int ch){
 8000cfc:	b480      	push	{r7}
 8000cfe:	b083      	sub	sp, #12
 8000d00:	af00      	add	r7, sp, #0
 8000d02:	6078      	str	r0, [r7, #4]
	/* Make sure transmit data register is empty*/
	while(!(USART1->SR & SR_TXE)){}
 8000d04:	bf00      	nop
 8000d06:	4b08      	ldr	r3, [pc, #32]	@ (8000d28 <usart1_write+0x2c>)
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d0f9      	beq.n	8000d06 <usart1_write+0xa>

	/* Write to transmit data register*/
	USART1->DR = (ch & 0xFF);
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	4a04      	ldr	r2, [pc, #16]	@ (8000d28 <usart1_write+0x2c>)
 8000d16:	b2db      	uxtb	r3, r3
 8000d18:	6053      	str	r3, [r2, #4]
}
 8000d1a:	bf00      	nop
 8000d1c:	370c      	adds	r7, #12
 8000d1e:	46bd      	mov	sp, r7
 8000d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d24:	4770      	bx	lr
 8000d26:	bf00      	nop
 8000d28:	40011000 	.word	0x40011000

08000d2c <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t periph_clk, uint32_t baudrate)
{
 8000d2c:	b5b0      	push	{r4, r5, r7, lr}
 8000d2e:	b08a      	sub	sp, #40	@ 0x28
 8000d30:	af00      	add	r7, sp, #0
 8000d32:	60f8      	str	r0, [r7, #12]
 8000d34:	60b9      	str	r1, [r7, #8]
 8000d36:	607a      	str	r2, [r7, #4]
     * 0b 0000 0000 0000 0000 0000 0000 1000 1011 or 0x8b
     * Doing this pro-gramatically as follows:
     */

    /* Step #1: Calculate the mantissa */
    mantissa = (double)periph_clk / (double)(baudrate * 16);
 8000d38:	68b8      	ldr	r0, [r7, #8]
 8000d3a:	f7ff fbeb 	bl	8000514 <__aeabi_ui2d>
 8000d3e:	4604      	mov	r4, r0
 8000d40:	460d      	mov	r5, r1
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	011b      	lsls	r3, r3, #4
 8000d46:	4618      	mov	r0, r3
 8000d48:	f7ff fbe4 	bl	8000514 <__aeabi_ui2d>
 8000d4c:	4602      	mov	r2, r0
 8000d4e:	460b      	mov	r3, r1
 8000d50:	4620      	mov	r0, r4
 8000d52:	4629      	mov	r1, r5
 8000d54:	f7ff fd82 	bl	800085c <__aeabi_ddiv>
 8000d58:	4602      	mov	r2, r0
 8000d5a:	460b      	mov	r3, r1
 8000d5c:	e9c7 2306 	strd	r2, r3, [r7, #24]

    /* Step #2: Calculate the fraction */
    fraction = ((mantissa - ((long)mantissa))) * 16;
 8000d60:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8000d64:	f7ff feea 	bl	8000b3c <__aeabi_d2iz>
 8000d68:	4603      	mov	r3, r0
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	f7ff fbe2 	bl	8000534 <__aeabi_i2d>
 8000d70:	4602      	mov	r2, r0
 8000d72:	460b      	mov	r3, r1
 8000d74:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8000d78:	f7ff fa8e 	bl	8000298 <__aeabi_dsub>
 8000d7c:	4602      	mov	r2, r0
 8000d7e:	460b      	mov	r3, r1
 8000d80:	4610      	mov	r0, r2
 8000d82:	4619      	mov	r1, r3
 8000d84:	f04f 0200 	mov.w	r2, #0
 8000d88:	4b22      	ldr	r3, [pc, #136]	@ (8000e14 <uart_set_baudrate+0xe8>)
 8000d8a:	f7ff fc3d 	bl	8000608 <__aeabi_dmul>
 8000d8e:	4602      	mov	r2, r0
 8000d90:	460b      	mov	r3, r1
 8000d92:	e9c7 2308 	strd	r2, r3, [r7, #32]

    /* Step #3: Round the fraction double up if fractional portion of fraction is > .50 */
    if (fraction - ((long)fraction) >= .5)
 8000d96:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8000d9a:	f7ff fecf 	bl	8000b3c <__aeabi_d2iz>
 8000d9e:	4603      	mov	r3, r0
 8000da0:	4618      	mov	r0, r3
 8000da2:	f7ff fbc7 	bl	8000534 <__aeabi_i2d>
 8000da6:	4602      	mov	r2, r0
 8000da8:	460b      	mov	r3, r1
 8000daa:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8000dae:	f7ff fa73 	bl	8000298 <__aeabi_dsub>
 8000db2:	4602      	mov	r2, r0
 8000db4:	460b      	mov	r3, r1
 8000db6:	4610      	mov	r0, r2
 8000db8:	4619      	mov	r1, r3
 8000dba:	f04f 0200 	mov.w	r2, #0
 8000dbe:	4b16      	ldr	r3, [pc, #88]	@ (8000e18 <uart_set_baudrate+0xec>)
 8000dc0:	f7ff fea8 	bl	8000b14 <__aeabi_dcmpge>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	d00a      	beq.n	8000de0 <uart_set_baudrate+0xb4>
        fraction++;
 8000dca:	f04f 0200 	mov.w	r2, #0
 8000dce:	4b13      	ldr	r3, [pc, #76]	@ (8000e1c <uart_set_baudrate+0xf0>)
 8000dd0:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8000dd4:	f7ff fa62 	bl	800029c <__adddf3>
 8000dd8:	4602      	mov	r2, r0
 8000dda:	460b      	mov	r3, r1
 8000ddc:	e9c7 2308 	strd	r2, r3, [r7, #32]

    /* Step #4: store the mantissa into a uint16_t value (USARTDIV_MANT) */
    USARTDIV_MANT = mantissa;
 8000de0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8000de4:	f7ff fed2 	bl	8000b8c <__aeabi_d2uiz>
 8000de8:	4603      	mov	r3, r0
 8000dea:	82fb      	strh	r3, [r7, #22]

    /* Step #5: store the fraction into a unit16_t value (USARTDIV_FRAC) */
    USARTDIV_FRAC = fraction;
 8000dec:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8000df0:	f7ff fecc 	bl	8000b8c <__aeabi_d2uiz>
 8000df4:	4603      	mov	r3, r0
 8000df6:	82bb      	strh	r3, [r7, #20]

    /* Step #6: set the 1st 4 bits [3:0] of the USART_BRR register to USARTDIV's fraction */
    USARTx->BRR = (USARTDIV_FRAC << 0);
 8000df8:	8aba      	ldrh	r2, [r7, #20]
 8000dfa:	68fb      	ldr	r3, [r7, #12]
 8000dfc:	609a      	str	r2, [r3, #8]

    /* Step #7: set the next 12 bits [11:0] of the USART_BRR to USARTDIV's mantissa */
    USARTx->BRR |= (USARTDIV_MANT << 4);
 8000dfe:	68fb      	ldr	r3, [r7, #12]
 8000e00:	689a      	ldr	r2, [r3, #8]
 8000e02:	8afb      	ldrh	r3, [r7, #22]
 8000e04:	011b      	lsls	r3, r3, #4
 8000e06:	431a      	orrs	r2, r3
 8000e08:	68fb      	ldr	r3, [r7, #12]
 8000e0a:	609a      	str	r2, [r3, #8]
}
 8000e0c:	bf00      	nop
 8000e0e:	3728      	adds	r7, #40	@ 0x28
 8000e10:	46bd      	mov	sp, r7
 8000e12:	bdb0      	pop	{r4, r5, r7, pc}
 8000e14:	40300000 	.word	0x40300000
 8000e18:	3fe00000 	.word	0x3fe00000
 8000e1c:	3ff00000 	.word	0x3ff00000

08000e20 <main>:
#include "systick.h"
#include "LED.h"

uint32_t sensor_value;

int main(void){
 8000e20:	b580      	push	{r7, lr}
 8000e22:	af00      	add	r7, sp, #0

	usart1_tx_init();
 8000e24:	f7ff ff2a 	bl	8000c7c <usart1_tx_init>
	LED_init();
 8000e28:	f7ff fed0 	bl	8000bcc <LED_init>
	while(1)
	{
		printf("A Second pasted!!\n\r");
 8000e2c:	4805      	ldr	r0, [pc, #20]	@ (8000e44 <main+0x24>)
 8000e2e:	f000 f9a9 	bl	8001184 <iprintf>
		LED_toggle(0);
 8000e32:	2000      	movs	r0, #0
 8000e34:	f7ff fee8 	bl	8000c08 <LED_toggle>
		systickDelayMs(1000);
 8000e38:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000e3c:	f000 f88c 	bl	8000f58 <systickDelayMs>
		printf("A Second pasted!!\n\r");
 8000e40:	bf00      	nop
 8000e42:	e7f3      	b.n	8000e2c <main+0xc>
 8000e44:	08001e70 	.word	0x08001e70

08000e48 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000e48:	b580      	push	{r7, lr}
 8000e4a:	b086      	sub	sp, #24
 8000e4c:	af00      	add	r7, sp, #0
 8000e4e:	60f8      	str	r0, [r7, #12]
 8000e50:	60b9      	str	r1, [r7, #8]
 8000e52:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e54:	2300      	movs	r3, #0
 8000e56:	617b      	str	r3, [r7, #20]
 8000e58:	e00a      	b.n	8000e70 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000e5a:	f3af 8000 	nop.w
 8000e5e:	4601      	mov	r1, r0
 8000e60:	68bb      	ldr	r3, [r7, #8]
 8000e62:	1c5a      	adds	r2, r3, #1
 8000e64:	60ba      	str	r2, [r7, #8]
 8000e66:	b2ca      	uxtb	r2, r1
 8000e68:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e6a:	697b      	ldr	r3, [r7, #20]
 8000e6c:	3301      	adds	r3, #1
 8000e6e:	617b      	str	r3, [r7, #20]
 8000e70:	697a      	ldr	r2, [r7, #20]
 8000e72:	687b      	ldr	r3, [r7, #4]
 8000e74:	429a      	cmp	r2, r3
 8000e76:	dbf0      	blt.n	8000e5a <_read+0x12>
  }

  return len;
 8000e78:	687b      	ldr	r3, [r7, #4]
}
 8000e7a:	4618      	mov	r0, r3
 8000e7c:	3718      	adds	r7, #24
 8000e7e:	46bd      	mov	sp, r7
 8000e80:	bd80      	pop	{r7, pc}

08000e82 <_close>:
  }
  return len;
}

int _close(int file)
{
 8000e82:	b480      	push	{r7}
 8000e84:	b083      	sub	sp, #12
 8000e86:	af00      	add	r7, sp, #0
 8000e88:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000e8a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8000e8e:	4618      	mov	r0, r3
 8000e90:	370c      	adds	r7, #12
 8000e92:	46bd      	mov	sp, r7
 8000e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e98:	4770      	bx	lr

08000e9a <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000e9a:	b480      	push	{r7}
 8000e9c:	b083      	sub	sp, #12
 8000e9e:	af00      	add	r7, sp, #0
 8000ea0:	6078      	str	r0, [r7, #4]
 8000ea2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000ea4:	683b      	ldr	r3, [r7, #0]
 8000ea6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000eaa:	605a      	str	r2, [r3, #4]
  return 0;
 8000eac:	2300      	movs	r3, #0
}
 8000eae:	4618      	mov	r0, r3
 8000eb0:	370c      	adds	r7, #12
 8000eb2:	46bd      	mov	sp, r7
 8000eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb8:	4770      	bx	lr

08000eba <_isatty>:

int _isatty(int file)
{
 8000eba:	b480      	push	{r7}
 8000ebc:	b083      	sub	sp, #12
 8000ebe:	af00      	add	r7, sp, #0
 8000ec0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000ec2:	2301      	movs	r3, #1
}
 8000ec4:	4618      	mov	r0, r3
 8000ec6:	370c      	adds	r7, #12
 8000ec8:	46bd      	mov	sp, r7
 8000eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ece:	4770      	bx	lr

08000ed0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000ed0:	b480      	push	{r7}
 8000ed2:	b085      	sub	sp, #20
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	60f8      	str	r0, [r7, #12]
 8000ed8:	60b9      	str	r1, [r7, #8]
 8000eda:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000edc:	2300      	movs	r3, #0
}
 8000ede:	4618      	mov	r0, r3
 8000ee0:	3714      	adds	r7, #20
 8000ee2:	46bd      	mov	sp, r7
 8000ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee8:	4770      	bx	lr
	...

08000eec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b086      	sub	sp, #24
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000ef4:	4a14      	ldr	r2, [pc, #80]	@ (8000f48 <_sbrk+0x5c>)
 8000ef6:	4b15      	ldr	r3, [pc, #84]	@ (8000f4c <_sbrk+0x60>)
 8000ef8:	1ad3      	subs	r3, r2, r3
 8000efa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000efc:	697b      	ldr	r3, [r7, #20]
 8000efe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f00:	4b13      	ldr	r3, [pc, #76]	@ (8000f50 <_sbrk+0x64>)
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	d102      	bne.n	8000f0e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000f08:	4b11      	ldr	r3, [pc, #68]	@ (8000f50 <_sbrk+0x64>)
 8000f0a:	4a12      	ldr	r2, [pc, #72]	@ (8000f54 <_sbrk+0x68>)
 8000f0c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f0e:	4b10      	ldr	r3, [pc, #64]	@ (8000f50 <_sbrk+0x64>)
 8000f10:	681a      	ldr	r2, [r3, #0]
 8000f12:	687b      	ldr	r3, [r7, #4]
 8000f14:	4413      	add	r3, r2
 8000f16:	693a      	ldr	r2, [r7, #16]
 8000f18:	429a      	cmp	r2, r3
 8000f1a:	d207      	bcs.n	8000f2c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000f1c:	f000 f94c 	bl	80011b8 <__errno>
 8000f20:	4603      	mov	r3, r0
 8000f22:	220c      	movs	r2, #12
 8000f24:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000f26:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000f2a:	e009      	b.n	8000f40 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000f2c:	4b08      	ldr	r3, [pc, #32]	@ (8000f50 <_sbrk+0x64>)
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000f32:	4b07      	ldr	r3, [pc, #28]	@ (8000f50 <_sbrk+0x64>)
 8000f34:	681a      	ldr	r2, [r3, #0]
 8000f36:	687b      	ldr	r3, [r7, #4]
 8000f38:	4413      	add	r3, r2
 8000f3a:	4a05      	ldr	r2, [pc, #20]	@ (8000f50 <_sbrk+0x64>)
 8000f3c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000f3e:	68fb      	ldr	r3, [r7, #12]
}
 8000f40:	4618      	mov	r0, r3
 8000f42:	3718      	adds	r7, #24
 8000f44:	46bd      	mov	sp, r7
 8000f46:	bd80      	pop	{r7, pc}
 8000f48:	20030000 	.word	0x20030000
 8000f4c:	00000400 	.word	0x00000400
 8000f50:	20000078 	.word	0x20000078
 8000f54:	200001c8 	.word	0x200001c8

08000f58 <systickDelayMs>:
#define SYSCLK					(16000000)
#define SYST_CTRL_ENABLE		(1U<<0)
#define SYST_CTRL_CLKSOURCE		(1U<<2)
#define SYST_CTRL_COUNT			(1U<<16)

void systickDelayMs(int delay){
 8000f58:	b480      	push	{r7}
 8000f5a:	b085      	sub	sp, #20
 8000f5c:	af00      	add	r7, sp, #0
 8000f5e:	6078      	str	r0, [r7, #4]
	/****Configure SysTick****/
	/*Reload with number of clocks per milliseconds*/
	SysTick->LOAD = SYSTICK_LOAD_VALUE;
 8000f60:	4b11      	ldr	r3, [pc, #68]	@ (8000fa8 <systickDelayMs+0x50>)
 8000f62:	f44f 527a 	mov.w	r2, #16000	@ 0x3e80
 8000f66:	605a      	str	r2, [r3, #4]

	/*Clear SysTick current value*/
	SysTick->VAL = 0;
 8000f68:	4b0f      	ldr	r3, [pc, #60]	@ (8000fa8 <systickDelayMs+0x50>)
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	609a      	str	r2, [r3, #8]

	/*Enable SysTick and select internal clock source*/
	SysTick->CTRL = SYST_CTRL_ENABLE | SYST_CTRL_CLKSOURCE;
 8000f6e:	4b0e      	ldr	r3, [pc, #56]	@ (8000fa8 <systickDelayMs+0x50>)
 8000f70:	2205      	movs	r2, #5
 8000f72:	601a      	str	r2, [r3, #0]

	for(int i=0;i<delay;i++){
 8000f74:	2300      	movs	r3, #0
 8000f76:	60fb      	str	r3, [r7, #12]
 8000f78:	e009      	b.n	8000f8e <systickDelayMs+0x36>
		/*Wait until COUNTFLAG is set*/
		while((SysTick->CTRL & SYST_CTRL_COUNT) == 0){}
 8000f7a:	bf00      	nop
 8000f7c:	4b0a      	ldr	r3, [pc, #40]	@ (8000fa8 <systickDelayMs+0x50>)
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	d0f9      	beq.n	8000f7c <systickDelayMs+0x24>
	for(int i=0;i<delay;i++){
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	3301      	adds	r3, #1
 8000f8c:	60fb      	str	r3, [r7, #12]
 8000f8e:	68fa      	ldr	r2, [r7, #12]
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	429a      	cmp	r2, r3
 8000f94:	dbf1      	blt.n	8000f7a <systickDelayMs+0x22>
	}
	SysTick->CTRL = 0;
 8000f96:	4b04      	ldr	r3, [pc, #16]	@ (8000fa8 <systickDelayMs+0x50>)
 8000f98:	2200      	movs	r2, #0
 8000f9a:	601a      	str	r2, [r3, #0]
}
 8000f9c:	bf00      	nop
 8000f9e:	3714      	adds	r7, #20
 8000fa0:	46bd      	mov	sp, r7
 8000fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa6:	4770      	bx	lr
 8000fa8:	e000e010 	.word	0xe000e010

08000fac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000fac:	480d      	ldr	r0, [pc, #52]	@ (8000fe4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000fae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000fb0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000fb4:	480c      	ldr	r0, [pc, #48]	@ (8000fe8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000fb6:	490d      	ldr	r1, [pc, #52]	@ (8000fec <LoopForever+0xa>)
  ldr r2, =_sidata
 8000fb8:	4a0d      	ldr	r2, [pc, #52]	@ (8000ff0 <LoopForever+0xe>)
  movs r3, #0
 8000fba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000fbc:	e002      	b.n	8000fc4 <LoopCopyDataInit>

08000fbe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000fbe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000fc0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000fc2:	3304      	adds	r3, #4

08000fc4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000fc4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000fc6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000fc8:	d3f9      	bcc.n	8000fbe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000fca:	4a0a      	ldr	r2, [pc, #40]	@ (8000ff4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000fcc:	4c0a      	ldr	r4, [pc, #40]	@ (8000ff8 <LoopForever+0x16>)
  movs r3, #0
 8000fce:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000fd0:	e001      	b.n	8000fd6 <LoopFillZerobss>

08000fd2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000fd2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000fd4:	3204      	adds	r2, #4

08000fd6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000fd6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000fd8:	d3fb      	bcc.n	8000fd2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000fda:	f000 f8f3 	bl	80011c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000fde:	f7ff ff1f 	bl	8000e20 <main>

08000fe2 <LoopForever>:

LoopForever:
  b LoopForever
 8000fe2:	e7fe      	b.n	8000fe2 <LoopForever>
  ldr   r0, =_estack
 8000fe4:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000fe8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000fec:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000ff0:	08001ec8 	.word	0x08001ec8
  ldr r2, =_sbss
 8000ff4:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000ff8:	200001c8 	.word	0x200001c8

08000ffc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000ffc:	e7fe      	b.n	8000ffc <ADC_IRQHandler>
	...

08001000 <std>:
 8001000:	2300      	movs	r3, #0
 8001002:	b510      	push	{r4, lr}
 8001004:	4604      	mov	r4, r0
 8001006:	e9c0 3300 	strd	r3, r3, [r0]
 800100a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800100e:	6083      	str	r3, [r0, #8]
 8001010:	8181      	strh	r1, [r0, #12]
 8001012:	6643      	str	r3, [r0, #100]	@ 0x64
 8001014:	81c2      	strh	r2, [r0, #14]
 8001016:	6183      	str	r3, [r0, #24]
 8001018:	4619      	mov	r1, r3
 800101a:	2208      	movs	r2, #8
 800101c:	305c      	adds	r0, #92	@ 0x5c
 800101e:	f000 f8c3 	bl	80011a8 <memset>
 8001022:	4b0d      	ldr	r3, [pc, #52]	@ (8001058 <std+0x58>)
 8001024:	6263      	str	r3, [r4, #36]	@ 0x24
 8001026:	4b0d      	ldr	r3, [pc, #52]	@ (800105c <std+0x5c>)
 8001028:	62a3      	str	r3, [r4, #40]	@ 0x28
 800102a:	4b0d      	ldr	r3, [pc, #52]	@ (8001060 <std+0x60>)
 800102c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800102e:	4b0d      	ldr	r3, [pc, #52]	@ (8001064 <std+0x64>)
 8001030:	6323      	str	r3, [r4, #48]	@ 0x30
 8001032:	4b0d      	ldr	r3, [pc, #52]	@ (8001068 <std+0x68>)
 8001034:	6224      	str	r4, [r4, #32]
 8001036:	429c      	cmp	r4, r3
 8001038:	d006      	beq.n	8001048 <std+0x48>
 800103a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800103e:	4294      	cmp	r4, r2
 8001040:	d002      	beq.n	8001048 <std+0x48>
 8001042:	33d0      	adds	r3, #208	@ 0xd0
 8001044:	429c      	cmp	r4, r3
 8001046:	d105      	bne.n	8001054 <std+0x54>
 8001048:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800104c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001050:	f000 b8dc 	b.w	800120c <__retarget_lock_init_recursive>
 8001054:	bd10      	pop	{r4, pc}
 8001056:	bf00      	nop
 8001058:	08001a61 	.word	0x08001a61
 800105c:	08001a83 	.word	0x08001a83
 8001060:	08001abb 	.word	0x08001abb
 8001064:	08001adf 	.word	0x08001adf
 8001068:	2000007c 	.word	0x2000007c

0800106c <stdio_exit_handler>:
 800106c:	4a02      	ldr	r2, [pc, #8]	@ (8001078 <stdio_exit_handler+0xc>)
 800106e:	4903      	ldr	r1, [pc, #12]	@ (800107c <stdio_exit_handler+0x10>)
 8001070:	4803      	ldr	r0, [pc, #12]	@ (8001080 <stdio_exit_handler+0x14>)
 8001072:	f000 b869 	b.w	8001148 <_fwalk_sglue>
 8001076:	bf00      	nop
 8001078:	20000000 	.word	0x20000000
 800107c:	080019f9 	.word	0x080019f9
 8001080:	20000010 	.word	0x20000010

08001084 <cleanup_stdio>:
 8001084:	6841      	ldr	r1, [r0, #4]
 8001086:	4b0c      	ldr	r3, [pc, #48]	@ (80010b8 <cleanup_stdio+0x34>)
 8001088:	4299      	cmp	r1, r3
 800108a:	b510      	push	{r4, lr}
 800108c:	4604      	mov	r4, r0
 800108e:	d001      	beq.n	8001094 <cleanup_stdio+0x10>
 8001090:	f000 fcb2 	bl	80019f8 <_fflush_r>
 8001094:	68a1      	ldr	r1, [r4, #8]
 8001096:	4b09      	ldr	r3, [pc, #36]	@ (80010bc <cleanup_stdio+0x38>)
 8001098:	4299      	cmp	r1, r3
 800109a:	d002      	beq.n	80010a2 <cleanup_stdio+0x1e>
 800109c:	4620      	mov	r0, r4
 800109e:	f000 fcab 	bl	80019f8 <_fflush_r>
 80010a2:	68e1      	ldr	r1, [r4, #12]
 80010a4:	4b06      	ldr	r3, [pc, #24]	@ (80010c0 <cleanup_stdio+0x3c>)
 80010a6:	4299      	cmp	r1, r3
 80010a8:	d004      	beq.n	80010b4 <cleanup_stdio+0x30>
 80010aa:	4620      	mov	r0, r4
 80010ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80010b0:	f000 bca2 	b.w	80019f8 <_fflush_r>
 80010b4:	bd10      	pop	{r4, pc}
 80010b6:	bf00      	nop
 80010b8:	2000007c 	.word	0x2000007c
 80010bc:	200000e4 	.word	0x200000e4
 80010c0:	2000014c 	.word	0x2000014c

080010c4 <global_stdio_init.part.0>:
 80010c4:	b510      	push	{r4, lr}
 80010c6:	4b0b      	ldr	r3, [pc, #44]	@ (80010f4 <global_stdio_init.part.0+0x30>)
 80010c8:	4c0b      	ldr	r4, [pc, #44]	@ (80010f8 <global_stdio_init.part.0+0x34>)
 80010ca:	4a0c      	ldr	r2, [pc, #48]	@ (80010fc <global_stdio_init.part.0+0x38>)
 80010cc:	601a      	str	r2, [r3, #0]
 80010ce:	4620      	mov	r0, r4
 80010d0:	2200      	movs	r2, #0
 80010d2:	2104      	movs	r1, #4
 80010d4:	f7ff ff94 	bl	8001000 <std>
 80010d8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80010dc:	2201      	movs	r2, #1
 80010de:	2109      	movs	r1, #9
 80010e0:	f7ff ff8e 	bl	8001000 <std>
 80010e4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80010e8:	2202      	movs	r2, #2
 80010ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80010ee:	2112      	movs	r1, #18
 80010f0:	f7ff bf86 	b.w	8001000 <std>
 80010f4:	200001b4 	.word	0x200001b4
 80010f8:	2000007c 	.word	0x2000007c
 80010fc:	0800106d 	.word	0x0800106d

08001100 <__sfp_lock_acquire>:
 8001100:	4801      	ldr	r0, [pc, #4]	@ (8001108 <__sfp_lock_acquire+0x8>)
 8001102:	f000 b884 	b.w	800120e <__retarget_lock_acquire_recursive>
 8001106:	bf00      	nop
 8001108:	200001b9 	.word	0x200001b9

0800110c <__sfp_lock_release>:
 800110c:	4801      	ldr	r0, [pc, #4]	@ (8001114 <__sfp_lock_release+0x8>)
 800110e:	f000 b87f 	b.w	8001210 <__retarget_lock_release_recursive>
 8001112:	bf00      	nop
 8001114:	200001b9 	.word	0x200001b9

08001118 <__sinit>:
 8001118:	b510      	push	{r4, lr}
 800111a:	4604      	mov	r4, r0
 800111c:	f7ff fff0 	bl	8001100 <__sfp_lock_acquire>
 8001120:	6a23      	ldr	r3, [r4, #32]
 8001122:	b11b      	cbz	r3, 800112c <__sinit+0x14>
 8001124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001128:	f7ff bff0 	b.w	800110c <__sfp_lock_release>
 800112c:	4b04      	ldr	r3, [pc, #16]	@ (8001140 <__sinit+0x28>)
 800112e:	6223      	str	r3, [r4, #32]
 8001130:	4b04      	ldr	r3, [pc, #16]	@ (8001144 <__sinit+0x2c>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	2b00      	cmp	r3, #0
 8001136:	d1f5      	bne.n	8001124 <__sinit+0xc>
 8001138:	f7ff ffc4 	bl	80010c4 <global_stdio_init.part.0>
 800113c:	e7f2      	b.n	8001124 <__sinit+0xc>
 800113e:	bf00      	nop
 8001140:	08001085 	.word	0x08001085
 8001144:	200001b4 	.word	0x200001b4

08001148 <_fwalk_sglue>:
 8001148:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800114c:	4607      	mov	r7, r0
 800114e:	4688      	mov	r8, r1
 8001150:	4614      	mov	r4, r2
 8001152:	2600      	movs	r6, #0
 8001154:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001158:	f1b9 0901 	subs.w	r9, r9, #1
 800115c:	d505      	bpl.n	800116a <_fwalk_sglue+0x22>
 800115e:	6824      	ldr	r4, [r4, #0]
 8001160:	2c00      	cmp	r4, #0
 8001162:	d1f7      	bne.n	8001154 <_fwalk_sglue+0xc>
 8001164:	4630      	mov	r0, r6
 8001166:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800116a:	89ab      	ldrh	r3, [r5, #12]
 800116c:	2b01      	cmp	r3, #1
 800116e:	d907      	bls.n	8001180 <_fwalk_sglue+0x38>
 8001170:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001174:	3301      	adds	r3, #1
 8001176:	d003      	beq.n	8001180 <_fwalk_sglue+0x38>
 8001178:	4629      	mov	r1, r5
 800117a:	4638      	mov	r0, r7
 800117c:	47c0      	blx	r8
 800117e:	4306      	orrs	r6, r0
 8001180:	3568      	adds	r5, #104	@ 0x68
 8001182:	e7e9      	b.n	8001158 <_fwalk_sglue+0x10>

08001184 <iprintf>:
 8001184:	b40f      	push	{r0, r1, r2, r3}
 8001186:	b507      	push	{r0, r1, r2, lr}
 8001188:	4906      	ldr	r1, [pc, #24]	@ (80011a4 <iprintf+0x20>)
 800118a:	ab04      	add	r3, sp, #16
 800118c:	6808      	ldr	r0, [r1, #0]
 800118e:	f853 2b04 	ldr.w	r2, [r3], #4
 8001192:	6881      	ldr	r1, [r0, #8]
 8001194:	9301      	str	r3, [sp, #4]
 8001196:	f000 f865 	bl	8001264 <_vfiprintf_r>
 800119a:	b003      	add	sp, #12
 800119c:	f85d eb04 	ldr.w	lr, [sp], #4
 80011a0:	b004      	add	sp, #16
 80011a2:	4770      	bx	lr
 80011a4:	2000000c 	.word	0x2000000c

080011a8 <memset>:
 80011a8:	4402      	add	r2, r0
 80011aa:	4603      	mov	r3, r0
 80011ac:	4293      	cmp	r3, r2
 80011ae:	d100      	bne.n	80011b2 <memset+0xa>
 80011b0:	4770      	bx	lr
 80011b2:	f803 1b01 	strb.w	r1, [r3], #1
 80011b6:	e7f9      	b.n	80011ac <memset+0x4>

080011b8 <__errno>:
 80011b8:	4b01      	ldr	r3, [pc, #4]	@ (80011c0 <__errno+0x8>)
 80011ba:	6818      	ldr	r0, [r3, #0]
 80011bc:	4770      	bx	lr
 80011be:	bf00      	nop
 80011c0:	2000000c 	.word	0x2000000c

080011c4 <__libc_init_array>:
 80011c4:	b570      	push	{r4, r5, r6, lr}
 80011c6:	4d0d      	ldr	r5, [pc, #52]	@ (80011fc <__libc_init_array+0x38>)
 80011c8:	4c0d      	ldr	r4, [pc, #52]	@ (8001200 <__libc_init_array+0x3c>)
 80011ca:	1b64      	subs	r4, r4, r5
 80011cc:	10a4      	asrs	r4, r4, #2
 80011ce:	2600      	movs	r6, #0
 80011d0:	42a6      	cmp	r6, r4
 80011d2:	d109      	bne.n	80011e8 <__libc_init_array+0x24>
 80011d4:	4d0b      	ldr	r5, [pc, #44]	@ (8001204 <__libc_init_array+0x40>)
 80011d6:	4c0c      	ldr	r4, [pc, #48]	@ (8001208 <__libc_init_array+0x44>)
 80011d8:	f000 fe3e 	bl	8001e58 <_init>
 80011dc:	1b64      	subs	r4, r4, r5
 80011de:	10a4      	asrs	r4, r4, #2
 80011e0:	2600      	movs	r6, #0
 80011e2:	42a6      	cmp	r6, r4
 80011e4:	d105      	bne.n	80011f2 <__libc_init_array+0x2e>
 80011e6:	bd70      	pop	{r4, r5, r6, pc}
 80011e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80011ec:	4798      	blx	r3
 80011ee:	3601      	adds	r6, #1
 80011f0:	e7ee      	b.n	80011d0 <__libc_init_array+0xc>
 80011f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80011f6:	4798      	blx	r3
 80011f8:	3601      	adds	r6, #1
 80011fa:	e7f2      	b.n	80011e2 <__libc_init_array+0x1e>
 80011fc:	08001ec0 	.word	0x08001ec0
 8001200:	08001ec0 	.word	0x08001ec0
 8001204:	08001ec0 	.word	0x08001ec0
 8001208:	08001ec4 	.word	0x08001ec4

0800120c <__retarget_lock_init_recursive>:
 800120c:	4770      	bx	lr

0800120e <__retarget_lock_acquire_recursive>:
 800120e:	4770      	bx	lr

08001210 <__retarget_lock_release_recursive>:
 8001210:	4770      	bx	lr

08001212 <__sfputc_r>:
 8001212:	6893      	ldr	r3, [r2, #8]
 8001214:	3b01      	subs	r3, #1
 8001216:	2b00      	cmp	r3, #0
 8001218:	b410      	push	{r4}
 800121a:	6093      	str	r3, [r2, #8]
 800121c:	da08      	bge.n	8001230 <__sfputc_r+0x1e>
 800121e:	6994      	ldr	r4, [r2, #24]
 8001220:	42a3      	cmp	r3, r4
 8001222:	db01      	blt.n	8001228 <__sfputc_r+0x16>
 8001224:	290a      	cmp	r1, #10
 8001226:	d103      	bne.n	8001230 <__sfputc_r+0x1e>
 8001228:	f85d 4b04 	ldr.w	r4, [sp], #4
 800122c:	f000 bc5b 	b.w	8001ae6 <__swbuf_r>
 8001230:	6813      	ldr	r3, [r2, #0]
 8001232:	1c58      	adds	r0, r3, #1
 8001234:	6010      	str	r0, [r2, #0]
 8001236:	7019      	strb	r1, [r3, #0]
 8001238:	4608      	mov	r0, r1
 800123a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800123e:	4770      	bx	lr

08001240 <__sfputs_r>:
 8001240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001242:	4606      	mov	r6, r0
 8001244:	460f      	mov	r7, r1
 8001246:	4614      	mov	r4, r2
 8001248:	18d5      	adds	r5, r2, r3
 800124a:	42ac      	cmp	r4, r5
 800124c:	d101      	bne.n	8001252 <__sfputs_r+0x12>
 800124e:	2000      	movs	r0, #0
 8001250:	e007      	b.n	8001262 <__sfputs_r+0x22>
 8001252:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001256:	463a      	mov	r2, r7
 8001258:	4630      	mov	r0, r6
 800125a:	f7ff ffda 	bl	8001212 <__sfputc_r>
 800125e:	1c43      	adds	r3, r0, #1
 8001260:	d1f3      	bne.n	800124a <__sfputs_r+0xa>
 8001262:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001264 <_vfiprintf_r>:
 8001264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001268:	460d      	mov	r5, r1
 800126a:	b09d      	sub	sp, #116	@ 0x74
 800126c:	4614      	mov	r4, r2
 800126e:	4698      	mov	r8, r3
 8001270:	4606      	mov	r6, r0
 8001272:	b118      	cbz	r0, 800127c <_vfiprintf_r+0x18>
 8001274:	6a03      	ldr	r3, [r0, #32]
 8001276:	b90b      	cbnz	r3, 800127c <_vfiprintf_r+0x18>
 8001278:	f7ff ff4e 	bl	8001118 <__sinit>
 800127c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800127e:	07d9      	lsls	r1, r3, #31
 8001280:	d405      	bmi.n	800128e <_vfiprintf_r+0x2a>
 8001282:	89ab      	ldrh	r3, [r5, #12]
 8001284:	059a      	lsls	r2, r3, #22
 8001286:	d402      	bmi.n	800128e <_vfiprintf_r+0x2a>
 8001288:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800128a:	f7ff ffc0 	bl	800120e <__retarget_lock_acquire_recursive>
 800128e:	89ab      	ldrh	r3, [r5, #12]
 8001290:	071b      	lsls	r3, r3, #28
 8001292:	d501      	bpl.n	8001298 <_vfiprintf_r+0x34>
 8001294:	692b      	ldr	r3, [r5, #16]
 8001296:	b99b      	cbnz	r3, 80012c0 <_vfiprintf_r+0x5c>
 8001298:	4629      	mov	r1, r5
 800129a:	4630      	mov	r0, r6
 800129c:	f000 fc62 	bl	8001b64 <__swsetup_r>
 80012a0:	b170      	cbz	r0, 80012c0 <_vfiprintf_r+0x5c>
 80012a2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80012a4:	07dc      	lsls	r4, r3, #31
 80012a6:	d504      	bpl.n	80012b2 <_vfiprintf_r+0x4e>
 80012a8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80012ac:	b01d      	add	sp, #116	@ 0x74
 80012ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80012b2:	89ab      	ldrh	r3, [r5, #12]
 80012b4:	0598      	lsls	r0, r3, #22
 80012b6:	d4f7      	bmi.n	80012a8 <_vfiprintf_r+0x44>
 80012b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80012ba:	f7ff ffa9 	bl	8001210 <__retarget_lock_release_recursive>
 80012be:	e7f3      	b.n	80012a8 <_vfiprintf_r+0x44>
 80012c0:	2300      	movs	r3, #0
 80012c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80012c4:	2320      	movs	r3, #32
 80012c6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80012ca:	f8cd 800c 	str.w	r8, [sp, #12]
 80012ce:	2330      	movs	r3, #48	@ 0x30
 80012d0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001480 <_vfiprintf_r+0x21c>
 80012d4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80012d8:	f04f 0901 	mov.w	r9, #1
 80012dc:	4623      	mov	r3, r4
 80012de:	469a      	mov	sl, r3
 80012e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80012e4:	b10a      	cbz	r2, 80012ea <_vfiprintf_r+0x86>
 80012e6:	2a25      	cmp	r2, #37	@ 0x25
 80012e8:	d1f9      	bne.n	80012de <_vfiprintf_r+0x7a>
 80012ea:	ebba 0b04 	subs.w	fp, sl, r4
 80012ee:	d00b      	beq.n	8001308 <_vfiprintf_r+0xa4>
 80012f0:	465b      	mov	r3, fp
 80012f2:	4622      	mov	r2, r4
 80012f4:	4629      	mov	r1, r5
 80012f6:	4630      	mov	r0, r6
 80012f8:	f7ff ffa2 	bl	8001240 <__sfputs_r>
 80012fc:	3001      	adds	r0, #1
 80012fe:	f000 80a7 	beq.w	8001450 <_vfiprintf_r+0x1ec>
 8001302:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001304:	445a      	add	r2, fp
 8001306:	9209      	str	r2, [sp, #36]	@ 0x24
 8001308:	f89a 3000 	ldrb.w	r3, [sl]
 800130c:	2b00      	cmp	r3, #0
 800130e:	f000 809f 	beq.w	8001450 <_vfiprintf_r+0x1ec>
 8001312:	2300      	movs	r3, #0
 8001314:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8001318:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800131c:	f10a 0a01 	add.w	sl, sl, #1
 8001320:	9304      	str	r3, [sp, #16]
 8001322:	9307      	str	r3, [sp, #28]
 8001324:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8001328:	931a      	str	r3, [sp, #104]	@ 0x68
 800132a:	4654      	mov	r4, sl
 800132c:	2205      	movs	r2, #5
 800132e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001332:	4853      	ldr	r0, [pc, #332]	@ (8001480 <_vfiprintf_r+0x21c>)
 8001334:	f7fe ff5c 	bl	80001f0 <memchr>
 8001338:	9a04      	ldr	r2, [sp, #16]
 800133a:	b9d8      	cbnz	r0, 8001374 <_vfiprintf_r+0x110>
 800133c:	06d1      	lsls	r1, r2, #27
 800133e:	bf44      	itt	mi
 8001340:	2320      	movmi	r3, #32
 8001342:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8001346:	0713      	lsls	r3, r2, #28
 8001348:	bf44      	itt	mi
 800134a:	232b      	movmi	r3, #43	@ 0x2b
 800134c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8001350:	f89a 3000 	ldrb.w	r3, [sl]
 8001354:	2b2a      	cmp	r3, #42	@ 0x2a
 8001356:	d015      	beq.n	8001384 <_vfiprintf_r+0x120>
 8001358:	9a07      	ldr	r2, [sp, #28]
 800135a:	4654      	mov	r4, sl
 800135c:	2000      	movs	r0, #0
 800135e:	f04f 0c0a 	mov.w	ip, #10
 8001362:	4621      	mov	r1, r4
 8001364:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001368:	3b30      	subs	r3, #48	@ 0x30
 800136a:	2b09      	cmp	r3, #9
 800136c:	d94b      	bls.n	8001406 <_vfiprintf_r+0x1a2>
 800136e:	b1b0      	cbz	r0, 800139e <_vfiprintf_r+0x13a>
 8001370:	9207      	str	r2, [sp, #28]
 8001372:	e014      	b.n	800139e <_vfiprintf_r+0x13a>
 8001374:	eba0 0308 	sub.w	r3, r0, r8
 8001378:	fa09 f303 	lsl.w	r3, r9, r3
 800137c:	4313      	orrs	r3, r2
 800137e:	9304      	str	r3, [sp, #16]
 8001380:	46a2      	mov	sl, r4
 8001382:	e7d2      	b.n	800132a <_vfiprintf_r+0xc6>
 8001384:	9b03      	ldr	r3, [sp, #12]
 8001386:	1d19      	adds	r1, r3, #4
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	9103      	str	r1, [sp, #12]
 800138c:	2b00      	cmp	r3, #0
 800138e:	bfbb      	ittet	lt
 8001390:	425b      	neglt	r3, r3
 8001392:	f042 0202 	orrlt.w	r2, r2, #2
 8001396:	9307      	strge	r3, [sp, #28]
 8001398:	9307      	strlt	r3, [sp, #28]
 800139a:	bfb8      	it	lt
 800139c:	9204      	strlt	r2, [sp, #16]
 800139e:	7823      	ldrb	r3, [r4, #0]
 80013a0:	2b2e      	cmp	r3, #46	@ 0x2e
 80013a2:	d10a      	bne.n	80013ba <_vfiprintf_r+0x156>
 80013a4:	7863      	ldrb	r3, [r4, #1]
 80013a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80013a8:	d132      	bne.n	8001410 <_vfiprintf_r+0x1ac>
 80013aa:	9b03      	ldr	r3, [sp, #12]
 80013ac:	1d1a      	adds	r2, r3, #4
 80013ae:	681b      	ldr	r3, [r3, #0]
 80013b0:	9203      	str	r2, [sp, #12]
 80013b2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80013b6:	3402      	adds	r4, #2
 80013b8:	9305      	str	r3, [sp, #20]
 80013ba:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001490 <_vfiprintf_r+0x22c>
 80013be:	7821      	ldrb	r1, [r4, #0]
 80013c0:	2203      	movs	r2, #3
 80013c2:	4650      	mov	r0, sl
 80013c4:	f7fe ff14 	bl	80001f0 <memchr>
 80013c8:	b138      	cbz	r0, 80013da <_vfiprintf_r+0x176>
 80013ca:	9b04      	ldr	r3, [sp, #16]
 80013cc:	eba0 000a 	sub.w	r0, r0, sl
 80013d0:	2240      	movs	r2, #64	@ 0x40
 80013d2:	4082      	lsls	r2, r0
 80013d4:	4313      	orrs	r3, r2
 80013d6:	3401      	adds	r4, #1
 80013d8:	9304      	str	r3, [sp, #16]
 80013da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80013de:	4829      	ldr	r0, [pc, #164]	@ (8001484 <_vfiprintf_r+0x220>)
 80013e0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80013e4:	2206      	movs	r2, #6
 80013e6:	f7fe ff03 	bl	80001f0 <memchr>
 80013ea:	2800      	cmp	r0, #0
 80013ec:	d03f      	beq.n	800146e <_vfiprintf_r+0x20a>
 80013ee:	4b26      	ldr	r3, [pc, #152]	@ (8001488 <_vfiprintf_r+0x224>)
 80013f0:	bb1b      	cbnz	r3, 800143a <_vfiprintf_r+0x1d6>
 80013f2:	9b03      	ldr	r3, [sp, #12]
 80013f4:	3307      	adds	r3, #7
 80013f6:	f023 0307 	bic.w	r3, r3, #7
 80013fa:	3308      	adds	r3, #8
 80013fc:	9303      	str	r3, [sp, #12]
 80013fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001400:	443b      	add	r3, r7
 8001402:	9309      	str	r3, [sp, #36]	@ 0x24
 8001404:	e76a      	b.n	80012dc <_vfiprintf_r+0x78>
 8001406:	fb0c 3202 	mla	r2, ip, r2, r3
 800140a:	460c      	mov	r4, r1
 800140c:	2001      	movs	r0, #1
 800140e:	e7a8      	b.n	8001362 <_vfiprintf_r+0xfe>
 8001410:	2300      	movs	r3, #0
 8001412:	3401      	adds	r4, #1
 8001414:	9305      	str	r3, [sp, #20]
 8001416:	4619      	mov	r1, r3
 8001418:	f04f 0c0a 	mov.w	ip, #10
 800141c:	4620      	mov	r0, r4
 800141e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001422:	3a30      	subs	r2, #48	@ 0x30
 8001424:	2a09      	cmp	r2, #9
 8001426:	d903      	bls.n	8001430 <_vfiprintf_r+0x1cc>
 8001428:	2b00      	cmp	r3, #0
 800142a:	d0c6      	beq.n	80013ba <_vfiprintf_r+0x156>
 800142c:	9105      	str	r1, [sp, #20]
 800142e:	e7c4      	b.n	80013ba <_vfiprintf_r+0x156>
 8001430:	fb0c 2101 	mla	r1, ip, r1, r2
 8001434:	4604      	mov	r4, r0
 8001436:	2301      	movs	r3, #1
 8001438:	e7f0      	b.n	800141c <_vfiprintf_r+0x1b8>
 800143a:	ab03      	add	r3, sp, #12
 800143c:	9300      	str	r3, [sp, #0]
 800143e:	462a      	mov	r2, r5
 8001440:	4b12      	ldr	r3, [pc, #72]	@ (800148c <_vfiprintf_r+0x228>)
 8001442:	a904      	add	r1, sp, #16
 8001444:	4630      	mov	r0, r6
 8001446:	f3af 8000 	nop.w
 800144a:	4607      	mov	r7, r0
 800144c:	1c78      	adds	r0, r7, #1
 800144e:	d1d6      	bne.n	80013fe <_vfiprintf_r+0x19a>
 8001450:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8001452:	07d9      	lsls	r1, r3, #31
 8001454:	d405      	bmi.n	8001462 <_vfiprintf_r+0x1fe>
 8001456:	89ab      	ldrh	r3, [r5, #12]
 8001458:	059a      	lsls	r2, r3, #22
 800145a:	d402      	bmi.n	8001462 <_vfiprintf_r+0x1fe>
 800145c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800145e:	f7ff fed7 	bl	8001210 <__retarget_lock_release_recursive>
 8001462:	89ab      	ldrh	r3, [r5, #12]
 8001464:	065b      	lsls	r3, r3, #25
 8001466:	f53f af1f 	bmi.w	80012a8 <_vfiprintf_r+0x44>
 800146a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800146c:	e71e      	b.n	80012ac <_vfiprintf_r+0x48>
 800146e:	ab03      	add	r3, sp, #12
 8001470:	9300      	str	r3, [sp, #0]
 8001472:	462a      	mov	r2, r5
 8001474:	4b05      	ldr	r3, [pc, #20]	@ (800148c <_vfiprintf_r+0x228>)
 8001476:	a904      	add	r1, sp, #16
 8001478:	4630      	mov	r0, r6
 800147a:	f000 f91b 	bl	80016b4 <_printf_i>
 800147e:	e7e4      	b.n	800144a <_vfiprintf_r+0x1e6>
 8001480:	08001e84 	.word	0x08001e84
 8001484:	08001e8e 	.word	0x08001e8e
 8001488:	00000000 	.word	0x00000000
 800148c:	08001241 	.word	0x08001241
 8001490:	08001e8a 	.word	0x08001e8a

08001494 <sbrk_aligned>:
 8001494:	b570      	push	{r4, r5, r6, lr}
 8001496:	4e0f      	ldr	r6, [pc, #60]	@ (80014d4 <sbrk_aligned+0x40>)
 8001498:	460c      	mov	r4, r1
 800149a:	6831      	ldr	r1, [r6, #0]
 800149c:	4605      	mov	r5, r0
 800149e:	b911      	cbnz	r1, 80014a6 <sbrk_aligned+0x12>
 80014a0:	f000 fc4c 	bl	8001d3c <_sbrk_r>
 80014a4:	6030      	str	r0, [r6, #0]
 80014a6:	4621      	mov	r1, r4
 80014a8:	4628      	mov	r0, r5
 80014aa:	f000 fc47 	bl	8001d3c <_sbrk_r>
 80014ae:	1c43      	adds	r3, r0, #1
 80014b0:	d103      	bne.n	80014ba <sbrk_aligned+0x26>
 80014b2:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 80014b6:	4620      	mov	r0, r4
 80014b8:	bd70      	pop	{r4, r5, r6, pc}
 80014ba:	1cc4      	adds	r4, r0, #3
 80014bc:	f024 0403 	bic.w	r4, r4, #3
 80014c0:	42a0      	cmp	r0, r4
 80014c2:	d0f8      	beq.n	80014b6 <sbrk_aligned+0x22>
 80014c4:	1a21      	subs	r1, r4, r0
 80014c6:	4628      	mov	r0, r5
 80014c8:	f000 fc38 	bl	8001d3c <_sbrk_r>
 80014cc:	3001      	adds	r0, #1
 80014ce:	d1f2      	bne.n	80014b6 <sbrk_aligned+0x22>
 80014d0:	e7ef      	b.n	80014b2 <sbrk_aligned+0x1e>
 80014d2:	bf00      	nop
 80014d4:	200001bc 	.word	0x200001bc

080014d8 <_malloc_r>:
 80014d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80014dc:	1ccd      	adds	r5, r1, #3
 80014de:	f025 0503 	bic.w	r5, r5, #3
 80014e2:	3508      	adds	r5, #8
 80014e4:	2d0c      	cmp	r5, #12
 80014e6:	bf38      	it	cc
 80014e8:	250c      	movcc	r5, #12
 80014ea:	2d00      	cmp	r5, #0
 80014ec:	4606      	mov	r6, r0
 80014ee:	db01      	blt.n	80014f4 <_malloc_r+0x1c>
 80014f0:	42a9      	cmp	r1, r5
 80014f2:	d904      	bls.n	80014fe <_malloc_r+0x26>
 80014f4:	230c      	movs	r3, #12
 80014f6:	6033      	str	r3, [r6, #0]
 80014f8:	2000      	movs	r0, #0
 80014fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80014fe:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80015d4 <_malloc_r+0xfc>
 8001502:	f000 faa1 	bl	8001a48 <__malloc_lock>
 8001506:	f8d8 3000 	ldr.w	r3, [r8]
 800150a:	461c      	mov	r4, r3
 800150c:	bb44      	cbnz	r4, 8001560 <_malloc_r+0x88>
 800150e:	4629      	mov	r1, r5
 8001510:	4630      	mov	r0, r6
 8001512:	f7ff ffbf 	bl	8001494 <sbrk_aligned>
 8001516:	1c43      	adds	r3, r0, #1
 8001518:	4604      	mov	r4, r0
 800151a:	d158      	bne.n	80015ce <_malloc_r+0xf6>
 800151c:	f8d8 4000 	ldr.w	r4, [r8]
 8001520:	4627      	mov	r7, r4
 8001522:	2f00      	cmp	r7, #0
 8001524:	d143      	bne.n	80015ae <_malloc_r+0xd6>
 8001526:	2c00      	cmp	r4, #0
 8001528:	d04b      	beq.n	80015c2 <_malloc_r+0xea>
 800152a:	6823      	ldr	r3, [r4, #0]
 800152c:	4639      	mov	r1, r7
 800152e:	4630      	mov	r0, r6
 8001530:	eb04 0903 	add.w	r9, r4, r3
 8001534:	f000 fc02 	bl	8001d3c <_sbrk_r>
 8001538:	4581      	cmp	r9, r0
 800153a:	d142      	bne.n	80015c2 <_malloc_r+0xea>
 800153c:	6821      	ldr	r1, [r4, #0]
 800153e:	1a6d      	subs	r5, r5, r1
 8001540:	4629      	mov	r1, r5
 8001542:	4630      	mov	r0, r6
 8001544:	f7ff ffa6 	bl	8001494 <sbrk_aligned>
 8001548:	3001      	adds	r0, #1
 800154a:	d03a      	beq.n	80015c2 <_malloc_r+0xea>
 800154c:	6823      	ldr	r3, [r4, #0]
 800154e:	442b      	add	r3, r5
 8001550:	6023      	str	r3, [r4, #0]
 8001552:	f8d8 3000 	ldr.w	r3, [r8]
 8001556:	685a      	ldr	r2, [r3, #4]
 8001558:	bb62      	cbnz	r2, 80015b4 <_malloc_r+0xdc>
 800155a:	f8c8 7000 	str.w	r7, [r8]
 800155e:	e00f      	b.n	8001580 <_malloc_r+0xa8>
 8001560:	6822      	ldr	r2, [r4, #0]
 8001562:	1b52      	subs	r2, r2, r5
 8001564:	d420      	bmi.n	80015a8 <_malloc_r+0xd0>
 8001566:	2a0b      	cmp	r2, #11
 8001568:	d917      	bls.n	800159a <_malloc_r+0xc2>
 800156a:	1961      	adds	r1, r4, r5
 800156c:	42a3      	cmp	r3, r4
 800156e:	6025      	str	r5, [r4, #0]
 8001570:	bf18      	it	ne
 8001572:	6059      	strne	r1, [r3, #4]
 8001574:	6863      	ldr	r3, [r4, #4]
 8001576:	bf08      	it	eq
 8001578:	f8c8 1000 	streq.w	r1, [r8]
 800157c:	5162      	str	r2, [r4, r5]
 800157e:	604b      	str	r3, [r1, #4]
 8001580:	4630      	mov	r0, r6
 8001582:	f000 fa67 	bl	8001a54 <__malloc_unlock>
 8001586:	f104 000b 	add.w	r0, r4, #11
 800158a:	1d23      	adds	r3, r4, #4
 800158c:	f020 0007 	bic.w	r0, r0, #7
 8001590:	1ac2      	subs	r2, r0, r3
 8001592:	bf1c      	itt	ne
 8001594:	1a1b      	subne	r3, r3, r0
 8001596:	50a3      	strne	r3, [r4, r2]
 8001598:	e7af      	b.n	80014fa <_malloc_r+0x22>
 800159a:	6862      	ldr	r2, [r4, #4]
 800159c:	42a3      	cmp	r3, r4
 800159e:	bf0c      	ite	eq
 80015a0:	f8c8 2000 	streq.w	r2, [r8]
 80015a4:	605a      	strne	r2, [r3, #4]
 80015a6:	e7eb      	b.n	8001580 <_malloc_r+0xa8>
 80015a8:	4623      	mov	r3, r4
 80015aa:	6864      	ldr	r4, [r4, #4]
 80015ac:	e7ae      	b.n	800150c <_malloc_r+0x34>
 80015ae:	463c      	mov	r4, r7
 80015b0:	687f      	ldr	r7, [r7, #4]
 80015b2:	e7b6      	b.n	8001522 <_malloc_r+0x4a>
 80015b4:	461a      	mov	r2, r3
 80015b6:	685b      	ldr	r3, [r3, #4]
 80015b8:	42a3      	cmp	r3, r4
 80015ba:	d1fb      	bne.n	80015b4 <_malloc_r+0xdc>
 80015bc:	2300      	movs	r3, #0
 80015be:	6053      	str	r3, [r2, #4]
 80015c0:	e7de      	b.n	8001580 <_malloc_r+0xa8>
 80015c2:	230c      	movs	r3, #12
 80015c4:	6033      	str	r3, [r6, #0]
 80015c6:	4630      	mov	r0, r6
 80015c8:	f000 fa44 	bl	8001a54 <__malloc_unlock>
 80015cc:	e794      	b.n	80014f8 <_malloc_r+0x20>
 80015ce:	6005      	str	r5, [r0, #0]
 80015d0:	e7d6      	b.n	8001580 <_malloc_r+0xa8>
 80015d2:	bf00      	nop
 80015d4:	200001c0 	.word	0x200001c0

080015d8 <_printf_common>:
 80015d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80015dc:	4616      	mov	r6, r2
 80015de:	4698      	mov	r8, r3
 80015e0:	688a      	ldr	r2, [r1, #8]
 80015e2:	690b      	ldr	r3, [r1, #16]
 80015e4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80015e8:	4293      	cmp	r3, r2
 80015ea:	bfb8      	it	lt
 80015ec:	4613      	movlt	r3, r2
 80015ee:	6033      	str	r3, [r6, #0]
 80015f0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80015f4:	4607      	mov	r7, r0
 80015f6:	460c      	mov	r4, r1
 80015f8:	b10a      	cbz	r2, 80015fe <_printf_common+0x26>
 80015fa:	3301      	adds	r3, #1
 80015fc:	6033      	str	r3, [r6, #0]
 80015fe:	6823      	ldr	r3, [r4, #0]
 8001600:	0699      	lsls	r1, r3, #26
 8001602:	bf42      	ittt	mi
 8001604:	6833      	ldrmi	r3, [r6, #0]
 8001606:	3302      	addmi	r3, #2
 8001608:	6033      	strmi	r3, [r6, #0]
 800160a:	6825      	ldr	r5, [r4, #0]
 800160c:	f015 0506 	ands.w	r5, r5, #6
 8001610:	d106      	bne.n	8001620 <_printf_common+0x48>
 8001612:	f104 0a19 	add.w	sl, r4, #25
 8001616:	68e3      	ldr	r3, [r4, #12]
 8001618:	6832      	ldr	r2, [r6, #0]
 800161a:	1a9b      	subs	r3, r3, r2
 800161c:	42ab      	cmp	r3, r5
 800161e:	dc26      	bgt.n	800166e <_printf_common+0x96>
 8001620:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001624:	6822      	ldr	r2, [r4, #0]
 8001626:	3b00      	subs	r3, #0
 8001628:	bf18      	it	ne
 800162a:	2301      	movne	r3, #1
 800162c:	0692      	lsls	r2, r2, #26
 800162e:	d42b      	bmi.n	8001688 <_printf_common+0xb0>
 8001630:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001634:	4641      	mov	r1, r8
 8001636:	4638      	mov	r0, r7
 8001638:	47c8      	blx	r9
 800163a:	3001      	adds	r0, #1
 800163c:	d01e      	beq.n	800167c <_printf_common+0xa4>
 800163e:	6823      	ldr	r3, [r4, #0]
 8001640:	6922      	ldr	r2, [r4, #16]
 8001642:	f003 0306 	and.w	r3, r3, #6
 8001646:	2b04      	cmp	r3, #4
 8001648:	bf02      	ittt	eq
 800164a:	68e5      	ldreq	r5, [r4, #12]
 800164c:	6833      	ldreq	r3, [r6, #0]
 800164e:	1aed      	subeq	r5, r5, r3
 8001650:	68a3      	ldr	r3, [r4, #8]
 8001652:	bf0c      	ite	eq
 8001654:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001658:	2500      	movne	r5, #0
 800165a:	4293      	cmp	r3, r2
 800165c:	bfc4      	itt	gt
 800165e:	1a9b      	subgt	r3, r3, r2
 8001660:	18ed      	addgt	r5, r5, r3
 8001662:	2600      	movs	r6, #0
 8001664:	341a      	adds	r4, #26
 8001666:	42b5      	cmp	r5, r6
 8001668:	d11a      	bne.n	80016a0 <_printf_common+0xc8>
 800166a:	2000      	movs	r0, #0
 800166c:	e008      	b.n	8001680 <_printf_common+0xa8>
 800166e:	2301      	movs	r3, #1
 8001670:	4652      	mov	r2, sl
 8001672:	4641      	mov	r1, r8
 8001674:	4638      	mov	r0, r7
 8001676:	47c8      	blx	r9
 8001678:	3001      	adds	r0, #1
 800167a:	d103      	bne.n	8001684 <_printf_common+0xac>
 800167c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001680:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001684:	3501      	adds	r5, #1
 8001686:	e7c6      	b.n	8001616 <_printf_common+0x3e>
 8001688:	18e1      	adds	r1, r4, r3
 800168a:	1c5a      	adds	r2, r3, #1
 800168c:	2030      	movs	r0, #48	@ 0x30
 800168e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001692:	4422      	add	r2, r4
 8001694:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001698:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800169c:	3302      	adds	r3, #2
 800169e:	e7c7      	b.n	8001630 <_printf_common+0x58>
 80016a0:	2301      	movs	r3, #1
 80016a2:	4622      	mov	r2, r4
 80016a4:	4641      	mov	r1, r8
 80016a6:	4638      	mov	r0, r7
 80016a8:	47c8      	blx	r9
 80016aa:	3001      	adds	r0, #1
 80016ac:	d0e6      	beq.n	800167c <_printf_common+0xa4>
 80016ae:	3601      	adds	r6, #1
 80016b0:	e7d9      	b.n	8001666 <_printf_common+0x8e>
	...

080016b4 <_printf_i>:
 80016b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80016b8:	7e0f      	ldrb	r7, [r1, #24]
 80016ba:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80016bc:	2f78      	cmp	r7, #120	@ 0x78
 80016be:	4691      	mov	r9, r2
 80016c0:	4680      	mov	r8, r0
 80016c2:	460c      	mov	r4, r1
 80016c4:	469a      	mov	sl, r3
 80016c6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80016ca:	d807      	bhi.n	80016dc <_printf_i+0x28>
 80016cc:	2f62      	cmp	r7, #98	@ 0x62
 80016ce:	d80a      	bhi.n	80016e6 <_printf_i+0x32>
 80016d0:	2f00      	cmp	r7, #0
 80016d2:	f000 80d1 	beq.w	8001878 <_printf_i+0x1c4>
 80016d6:	2f58      	cmp	r7, #88	@ 0x58
 80016d8:	f000 80b8 	beq.w	800184c <_printf_i+0x198>
 80016dc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80016e0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80016e4:	e03a      	b.n	800175c <_printf_i+0xa8>
 80016e6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80016ea:	2b15      	cmp	r3, #21
 80016ec:	d8f6      	bhi.n	80016dc <_printf_i+0x28>
 80016ee:	a101      	add	r1, pc, #4	@ (adr r1, 80016f4 <_printf_i+0x40>)
 80016f0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80016f4:	0800174d 	.word	0x0800174d
 80016f8:	08001761 	.word	0x08001761
 80016fc:	080016dd 	.word	0x080016dd
 8001700:	080016dd 	.word	0x080016dd
 8001704:	080016dd 	.word	0x080016dd
 8001708:	080016dd 	.word	0x080016dd
 800170c:	08001761 	.word	0x08001761
 8001710:	080016dd 	.word	0x080016dd
 8001714:	080016dd 	.word	0x080016dd
 8001718:	080016dd 	.word	0x080016dd
 800171c:	080016dd 	.word	0x080016dd
 8001720:	0800185f 	.word	0x0800185f
 8001724:	0800178b 	.word	0x0800178b
 8001728:	08001819 	.word	0x08001819
 800172c:	080016dd 	.word	0x080016dd
 8001730:	080016dd 	.word	0x080016dd
 8001734:	08001881 	.word	0x08001881
 8001738:	080016dd 	.word	0x080016dd
 800173c:	0800178b 	.word	0x0800178b
 8001740:	080016dd 	.word	0x080016dd
 8001744:	080016dd 	.word	0x080016dd
 8001748:	08001821 	.word	0x08001821
 800174c:	6833      	ldr	r3, [r6, #0]
 800174e:	1d1a      	adds	r2, r3, #4
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	6032      	str	r2, [r6, #0]
 8001754:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001758:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800175c:	2301      	movs	r3, #1
 800175e:	e09c      	b.n	800189a <_printf_i+0x1e6>
 8001760:	6833      	ldr	r3, [r6, #0]
 8001762:	6820      	ldr	r0, [r4, #0]
 8001764:	1d19      	adds	r1, r3, #4
 8001766:	6031      	str	r1, [r6, #0]
 8001768:	0606      	lsls	r6, r0, #24
 800176a:	d501      	bpl.n	8001770 <_printf_i+0xbc>
 800176c:	681d      	ldr	r5, [r3, #0]
 800176e:	e003      	b.n	8001778 <_printf_i+0xc4>
 8001770:	0645      	lsls	r5, r0, #25
 8001772:	d5fb      	bpl.n	800176c <_printf_i+0xb8>
 8001774:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001778:	2d00      	cmp	r5, #0
 800177a:	da03      	bge.n	8001784 <_printf_i+0xd0>
 800177c:	232d      	movs	r3, #45	@ 0x2d
 800177e:	426d      	negs	r5, r5
 8001780:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001784:	4858      	ldr	r0, [pc, #352]	@ (80018e8 <_printf_i+0x234>)
 8001786:	230a      	movs	r3, #10
 8001788:	e011      	b.n	80017ae <_printf_i+0xfa>
 800178a:	6821      	ldr	r1, [r4, #0]
 800178c:	6833      	ldr	r3, [r6, #0]
 800178e:	0608      	lsls	r0, r1, #24
 8001790:	f853 5b04 	ldr.w	r5, [r3], #4
 8001794:	d402      	bmi.n	800179c <_printf_i+0xe8>
 8001796:	0649      	lsls	r1, r1, #25
 8001798:	bf48      	it	mi
 800179a:	b2ad      	uxthmi	r5, r5
 800179c:	2f6f      	cmp	r7, #111	@ 0x6f
 800179e:	4852      	ldr	r0, [pc, #328]	@ (80018e8 <_printf_i+0x234>)
 80017a0:	6033      	str	r3, [r6, #0]
 80017a2:	bf14      	ite	ne
 80017a4:	230a      	movne	r3, #10
 80017a6:	2308      	moveq	r3, #8
 80017a8:	2100      	movs	r1, #0
 80017aa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80017ae:	6866      	ldr	r6, [r4, #4]
 80017b0:	60a6      	str	r6, [r4, #8]
 80017b2:	2e00      	cmp	r6, #0
 80017b4:	db05      	blt.n	80017c2 <_printf_i+0x10e>
 80017b6:	6821      	ldr	r1, [r4, #0]
 80017b8:	432e      	orrs	r6, r5
 80017ba:	f021 0104 	bic.w	r1, r1, #4
 80017be:	6021      	str	r1, [r4, #0]
 80017c0:	d04b      	beq.n	800185a <_printf_i+0x1a6>
 80017c2:	4616      	mov	r6, r2
 80017c4:	fbb5 f1f3 	udiv	r1, r5, r3
 80017c8:	fb03 5711 	mls	r7, r3, r1, r5
 80017cc:	5dc7      	ldrb	r7, [r0, r7]
 80017ce:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80017d2:	462f      	mov	r7, r5
 80017d4:	42bb      	cmp	r3, r7
 80017d6:	460d      	mov	r5, r1
 80017d8:	d9f4      	bls.n	80017c4 <_printf_i+0x110>
 80017da:	2b08      	cmp	r3, #8
 80017dc:	d10b      	bne.n	80017f6 <_printf_i+0x142>
 80017de:	6823      	ldr	r3, [r4, #0]
 80017e0:	07df      	lsls	r7, r3, #31
 80017e2:	d508      	bpl.n	80017f6 <_printf_i+0x142>
 80017e4:	6923      	ldr	r3, [r4, #16]
 80017e6:	6861      	ldr	r1, [r4, #4]
 80017e8:	4299      	cmp	r1, r3
 80017ea:	bfde      	ittt	le
 80017ec:	2330      	movle	r3, #48	@ 0x30
 80017ee:	f806 3c01 	strble.w	r3, [r6, #-1]
 80017f2:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80017f6:	1b92      	subs	r2, r2, r6
 80017f8:	6122      	str	r2, [r4, #16]
 80017fa:	f8cd a000 	str.w	sl, [sp]
 80017fe:	464b      	mov	r3, r9
 8001800:	aa03      	add	r2, sp, #12
 8001802:	4621      	mov	r1, r4
 8001804:	4640      	mov	r0, r8
 8001806:	f7ff fee7 	bl	80015d8 <_printf_common>
 800180a:	3001      	adds	r0, #1
 800180c:	d14a      	bne.n	80018a4 <_printf_i+0x1f0>
 800180e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001812:	b004      	add	sp, #16
 8001814:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001818:	6823      	ldr	r3, [r4, #0]
 800181a:	f043 0320 	orr.w	r3, r3, #32
 800181e:	6023      	str	r3, [r4, #0]
 8001820:	4832      	ldr	r0, [pc, #200]	@ (80018ec <_printf_i+0x238>)
 8001822:	2778      	movs	r7, #120	@ 0x78
 8001824:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001828:	6823      	ldr	r3, [r4, #0]
 800182a:	6831      	ldr	r1, [r6, #0]
 800182c:	061f      	lsls	r7, r3, #24
 800182e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001832:	d402      	bmi.n	800183a <_printf_i+0x186>
 8001834:	065f      	lsls	r7, r3, #25
 8001836:	bf48      	it	mi
 8001838:	b2ad      	uxthmi	r5, r5
 800183a:	6031      	str	r1, [r6, #0]
 800183c:	07d9      	lsls	r1, r3, #31
 800183e:	bf44      	itt	mi
 8001840:	f043 0320 	orrmi.w	r3, r3, #32
 8001844:	6023      	strmi	r3, [r4, #0]
 8001846:	b11d      	cbz	r5, 8001850 <_printf_i+0x19c>
 8001848:	2310      	movs	r3, #16
 800184a:	e7ad      	b.n	80017a8 <_printf_i+0xf4>
 800184c:	4826      	ldr	r0, [pc, #152]	@ (80018e8 <_printf_i+0x234>)
 800184e:	e7e9      	b.n	8001824 <_printf_i+0x170>
 8001850:	6823      	ldr	r3, [r4, #0]
 8001852:	f023 0320 	bic.w	r3, r3, #32
 8001856:	6023      	str	r3, [r4, #0]
 8001858:	e7f6      	b.n	8001848 <_printf_i+0x194>
 800185a:	4616      	mov	r6, r2
 800185c:	e7bd      	b.n	80017da <_printf_i+0x126>
 800185e:	6833      	ldr	r3, [r6, #0]
 8001860:	6825      	ldr	r5, [r4, #0]
 8001862:	6961      	ldr	r1, [r4, #20]
 8001864:	1d18      	adds	r0, r3, #4
 8001866:	6030      	str	r0, [r6, #0]
 8001868:	062e      	lsls	r6, r5, #24
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	d501      	bpl.n	8001872 <_printf_i+0x1be>
 800186e:	6019      	str	r1, [r3, #0]
 8001870:	e002      	b.n	8001878 <_printf_i+0x1c4>
 8001872:	0668      	lsls	r0, r5, #25
 8001874:	d5fb      	bpl.n	800186e <_printf_i+0x1ba>
 8001876:	8019      	strh	r1, [r3, #0]
 8001878:	2300      	movs	r3, #0
 800187a:	6123      	str	r3, [r4, #16]
 800187c:	4616      	mov	r6, r2
 800187e:	e7bc      	b.n	80017fa <_printf_i+0x146>
 8001880:	6833      	ldr	r3, [r6, #0]
 8001882:	1d1a      	adds	r2, r3, #4
 8001884:	6032      	str	r2, [r6, #0]
 8001886:	681e      	ldr	r6, [r3, #0]
 8001888:	6862      	ldr	r2, [r4, #4]
 800188a:	2100      	movs	r1, #0
 800188c:	4630      	mov	r0, r6
 800188e:	f7fe fcaf 	bl	80001f0 <memchr>
 8001892:	b108      	cbz	r0, 8001898 <_printf_i+0x1e4>
 8001894:	1b80      	subs	r0, r0, r6
 8001896:	6060      	str	r0, [r4, #4]
 8001898:	6863      	ldr	r3, [r4, #4]
 800189a:	6123      	str	r3, [r4, #16]
 800189c:	2300      	movs	r3, #0
 800189e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80018a2:	e7aa      	b.n	80017fa <_printf_i+0x146>
 80018a4:	6923      	ldr	r3, [r4, #16]
 80018a6:	4632      	mov	r2, r6
 80018a8:	4649      	mov	r1, r9
 80018aa:	4640      	mov	r0, r8
 80018ac:	47d0      	blx	sl
 80018ae:	3001      	adds	r0, #1
 80018b0:	d0ad      	beq.n	800180e <_printf_i+0x15a>
 80018b2:	6823      	ldr	r3, [r4, #0]
 80018b4:	079b      	lsls	r3, r3, #30
 80018b6:	d413      	bmi.n	80018e0 <_printf_i+0x22c>
 80018b8:	68e0      	ldr	r0, [r4, #12]
 80018ba:	9b03      	ldr	r3, [sp, #12]
 80018bc:	4298      	cmp	r0, r3
 80018be:	bfb8      	it	lt
 80018c0:	4618      	movlt	r0, r3
 80018c2:	e7a6      	b.n	8001812 <_printf_i+0x15e>
 80018c4:	2301      	movs	r3, #1
 80018c6:	4632      	mov	r2, r6
 80018c8:	4649      	mov	r1, r9
 80018ca:	4640      	mov	r0, r8
 80018cc:	47d0      	blx	sl
 80018ce:	3001      	adds	r0, #1
 80018d0:	d09d      	beq.n	800180e <_printf_i+0x15a>
 80018d2:	3501      	adds	r5, #1
 80018d4:	68e3      	ldr	r3, [r4, #12]
 80018d6:	9903      	ldr	r1, [sp, #12]
 80018d8:	1a5b      	subs	r3, r3, r1
 80018da:	42ab      	cmp	r3, r5
 80018dc:	dcf2      	bgt.n	80018c4 <_printf_i+0x210>
 80018de:	e7eb      	b.n	80018b8 <_printf_i+0x204>
 80018e0:	2500      	movs	r5, #0
 80018e2:	f104 0619 	add.w	r6, r4, #25
 80018e6:	e7f5      	b.n	80018d4 <_printf_i+0x220>
 80018e8:	08001e95 	.word	0x08001e95
 80018ec:	08001ea6 	.word	0x08001ea6

080018f0 <__sflush_r>:
 80018f0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80018f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80018f8:	0716      	lsls	r6, r2, #28
 80018fa:	4605      	mov	r5, r0
 80018fc:	460c      	mov	r4, r1
 80018fe:	d454      	bmi.n	80019aa <__sflush_r+0xba>
 8001900:	684b      	ldr	r3, [r1, #4]
 8001902:	2b00      	cmp	r3, #0
 8001904:	dc02      	bgt.n	800190c <__sflush_r+0x1c>
 8001906:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001908:	2b00      	cmp	r3, #0
 800190a:	dd48      	ble.n	800199e <__sflush_r+0xae>
 800190c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800190e:	2e00      	cmp	r6, #0
 8001910:	d045      	beq.n	800199e <__sflush_r+0xae>
 8001912:	2300      	movs	r3, #0
 8001914:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001918:	682f      	ldr	r7, [r5, #0]
 800191a:	6a21      	ldr	r1, [r4, #32]
 800191c:	602b      	str	r3, [r5, #0]
 800191e:	d030      	beq.n	8001982 <__sflush_r+0x92>
 8001920:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001922:	89a3      	ldrh	r3, [r4, #12]
 8001924:	0759      	lsls	r1, r3, #29
 8001926:	d505      	bpl.n	8001934 <__sflush_r+0x44>
 8001928:	6863      	ldr	r3, [r4, #4]
 800192a:	1ad2      	subs	r2, r2, r3
 800192c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800192e:	b10b      	cbz	r3, 8001934 <__sflush_r+0x44>
 8001930:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001932:	1ad2      	subs	r2, r2, r3
 8001934:	2300      	movs	r3, #0
 8001936:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001938:	6a21      	ldr	r1, [r4, #32]
 800193a:	4628      	mov	r0, r5
 800193c:	47b0      	blx	r6
 800193e:	1c43      	adds	r3, r0, #1
 8001940:	89a3      	ldrh	r3, [r4, #12]
 8001942:	d106      	bne.n	8001952 <__sflush_r+0x62>
 8001944:	6829      	ldr	r1, [r5, #0]
 8001946:	291d      	cmp	r1, #29
 8001948:	d82b      	bhi.n	80019a2 <__sflush_r+0xb2>
 800194a:	4a2a      	ldr	r2, [pc, #168]	@ (80019f4 <__sflush_r+0x104>)
 800194c:	40ca      	lsrs	r2, r1
 800194e:	07d6      	lsls	r6, r2, #31
 8001950:	d527      	bpl.n	80019a2 <__sflush_r+0xb2>
 8001952:	2200      	movs	r2, #0
 8001954:	6062      	str	r2, [r4, #4]
 8001956:	04d9      	lsls	r1, r3, #19
 8001958:	6922      	ldr	r2, [r4, #16]
 800195a:	6022      	str	r2, [r4, #0]
 800195c:	d504      	bpl.n	8001968 <__sflush_r+0x78>
 800195e:	1c42      	adds	r2, r0, #1
 8001960:	d101      	bne.n	8001966 <__sflush_r+0x76>
 8001962:	682b      	ldr	r3, [r5, #0]
 8001964:	b903      	cbnz	r3, 8001968 <__sflush_r+0x78>
 8001966:	6560      	str	r0, [r4, #84]	@ 0x54
 8001968:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800196a:	602f      	str	r7, [r5, #0]
 800196c:	b1b9      	cbz	r1, 800199e <__sflush_r+0xae>
 800196e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001972:	4299      	cmp	r1, r3
 8001974:	d002      	beq.n	800197c <__sflush_r+0x8c>
 8001976:	4628      	mov	r0, r5
 8001978:	f000 fa24 	bl	8001dc4 <_free_r>
 800197c:	2300      	movs	r3, #0
 800197e:	6363      	str	r3, [r4, #52]	@ 0x34
 8001980:	e00d      	b.n	800199e <__sflush_r+0xae>
 8001982:	2301      	movs	r3, #1
 8001984:	4628      	mov	r0, r5
 8001986:	47b0      	blx	r6
 8001988:	4602      	mov	r2, r0
 800198a:	1c50      	adds	r0, r2, #1
 800198c:	d1c9      	bne.n	8001922 <__sflush_r+0x32>
 800198e:	682b      	ldr	r3, [r5, #0]
 8001990:	2b00      	cmp	r3, #0
 8001992:	d0c6      	beq.n	8001922 <__sflush_r+0x32>
 8001994:	2b1d      	cmp	r3, #29
 8001996:	d001      	beq.n	800199c <__sflush_r+0xac>
 8001998:	2b16      	cmp	r3, #22
 800199a:	d11e      	bne.n	80019da <__sflush_r+0xea>
 800199c:	602f      	str	r7, [r5, #0]
 800199e:	2000      	movs	r0, #0
 80019a0:	e022      	b.n	80019e8 <__sflush_r+0xf8>
 80019a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80019a6:	b21b      	sxth	r3, r3
 80019a8:	e01b      	b.n	80019e2 <__sflush_r+0xf2>
 80019aa:	690f      	ldr	r7, [r1, #16]
 80019ac:	2f00      	cmp	r7, #0
 80019ae:	d0f6      	beq.n	800199e <__sflush_r+0xae>
 80019b0:	0793      	lsls	r3, r2, #30
 80019b2:	680e      	ldr	r6, [r1, #0]
 80019b4:	bf08      	it	eq
 80019b6:	694b      	ldreq	r3, [r1, #20]
 80019b8:	600f      	str	r7, [r1, #0]
 80019ba:	bf18      	it	ne
 80019bc:	2300      	movne	r3, #0
 80019be:	eba6 0807 	sub.w	r8, r6, r7
 80019c2:	608b      	str	r3, [r1, #8]
 80019c4:	f1b8 0f00 	cmp.w	r8, #0
 80019c8:	dde9      	ble.n	800199e <__sflush_r+0xae>
 80019ca:	6a21      	ldr	r1, [r4, #32]
 80019cc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80019ce:	4643      	mov	r3, r8
 80019d0:	463a      	mov	r2, r7
 80019d2:	4628      	mov	r0, r5
 80019d4:	47b0      	blx	r6
 80019d6:	2800      	cmp	r0, #0
 80019d8:	dc08      	bgt.n	80019ec <__sflush_r+0xfc>
 80019da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80019de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80019e2:	81a3      	strh	r3, [r4, #12]
 80019e4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80019e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80019ec:	4407      	add	r7, r0
 80019ee:	eba8 0800 	sub.w	r8, r8, r0
 80019f2:	e7e7      	b.n	80019c4 <__sflush_r+0xd4>
 80019f4:	20400001 	.word	0x20400001

080019f8 <_fflush_r>:
 80019f8:	b538      	push	{r3, r4, r5, lr}
 80019fa:	690b      	ldr	r3, [r1, #16]
 80019fc:	4605      	mov	r5, r0
 80019fe:	460c      	mov	r4, r1
 8001a00:	b913      	cbnz	r3, 8001a08 <_fflush_r+0x10>
 8001a02:	2500      	movs	r5, #0
 8001a04:	4628      	mov	r0, r5
 8001a06:	bd38      	pop	{r3, r4, r5, pc}
 8001a08:	b118      	cbz	r0, 8001a12 <_fflush_r+0x1a>
 8001a0a:	6a03      	ldr	r3, [r0, #32]
 8001a0c:	b90b      	cbnz	r3, 8001a12 <_fflush_r+0x1a>
 8001a0e:	f7ff fb83 	bl	8001118 <__sinit>
 8001a12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001a16:	2b00      	cmp	r3, #0
 8001a18:	d0f3      	beq.n	8001a02 <_fflush_r+0xa>
 8001a1a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001a1c:	07d0      	lsls	r0, r2, #31
 8001a1e:	d404      	bmi.n	8001a2a <_fflush_r+0x32>
 8001a20:	0599      	lsls	r1, r3, #22
 8001a22:	d402      	bmi.n	8001a2a <_fflush_r+0x32>
 8001a24:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001a26:	f7ff fbf2 	bl	800120e <__retarget_lock_acquire_recursive>
 8001a2a:	4628      	mov	r0, r5
 8001a2c:	4621      	mov	r1, r4
 8001a2e:	f7ff ff5f 	bl	80018f0 <__sflush_r>
 8001a32:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001a34:	07da      	lsls	r2, r3, #31
 8001a36:	4605      	mov	r5, r0
 8001a38:	d4e4      	bmi.n	8001a04 <_fflush_r+0xc>
 8001a3a:	89a3      	ldrh	r3, [r4, #12]
 8001a3c:	059b      	lsls	r3, r3, #22
 8001a3e:	d4e1      	bmi.n	8001a04 <_fflush_r+0xc>
 8001a40:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001a42:	f7ff fbe5 	bl	8001210 <__retarget_lock_release_recursive>
 8001a46:	e7dd      	b.n	8001a04 <_fflush_r+0xc>

08001a48 <__malloc_lock>:
 8001a48:	4801      	ldr	r0, [pc, #4]	@ (8001a50 <__malloc_lock+0x8>)
 8001a4a:	f7ff bbe0 	b.w	800120e <__retarget_lock_acquire_recursive>
 8001a4e:	bf00      	nop
 8001a50:	200001b8 	.word	0x200001b8

08001a54 <__malloc_unlock>:
 8001a54:	4801      	ldr	r0, [pc, #4]	@ (8001a5c <__malloc_unlock+0x8>)
 8001a56:	f7ff bbdb 	b.w	8001210 <__retarget_lock_release_recursive>
 8001a5a:	bf00      	nop
 8001a5c:	200001b8 	.word	0x200001b8

08001a60 <__sread>:
 8001a60:	b510      	push	{r4, lr}
 8001a62:	460c      	mov	r4, r1
 8001a64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a68:	f000 f956 	bl	8001d18 <_read_r>
 8001a6c:	2800      	cmp	r0, #0
 8001a6e:	bfab      	itete	ge
 8001a70:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8001a72:	89a3      	ldrhlt	r3, [r4, #12]
 8001a74:	181b      	addge	r3, r3, r0
 8001a76:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8001a7a:	bfac      	ite	ge
 8001a7c:	6563      	strge	r3, [r4, #84]	@ 0x54
 8001a7e:	81a3      	strhlt	r3, [r4, #12]
 8001a80:	bd10      	pop	{r4, pc}

08001a82 <__swrite>:
 8001a82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a86:	461f      	mov	r7, r3
 8001a88:	898b      	ldrh	r3, [r1, #12]
 8001a8a:	05db      	lsls	r3, r3, #23
 8001a8c:	4605      	mov	r5, r0
 8001a8e:	460c      	mov	r4, r1
 8001a90:	4616      	mov	r6, r2
 8001a92:	d505      	bpl.n	8001aa0 <__swrite+0x1e>
 8001a94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a98:	2302      	movs	r3, #2
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	f000 f92a 	bl	8001cf4 <_lseek_r>
 8001aa0:	89a3      	ldrh	r3, [r4, #12]
 8001aa2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001aa6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001aaa:	81a3      	strh	r3, [r4, #12]
 8001aac:	4632      	mov	r2, r6
 8001aae:	463b      	mov	r3, r7
 8001ab0:	4628      	mov	r0, r5
 8001ab2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001ab6:	f000 b951 	b.w	8001d5c <_write_r>

08001aba <__sseek>:
 8001aba:	b510      	push	{r4, lr}
 8001abc:	460c      	mov	r4, r1
 8001abe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ac2:	f000 f917 	bl	8001cf4 <_lseek_r>
 8001ac6:	1c43      	adds	r3, r0, #1
 8001ac8:	89a3      	ldrh	r3, [r4, #12]
 8001aca:	bf15      	itete	ne
 8001acc:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001ace:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8001ad2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8001ad6:	81a3      	strheq	r3, [r4, #12]
 8001ad8:	bf18      	it	ne
 8001ada:	81a3      	strhne	r3, [r4, #12]
 8001adc:	bd10      	pop	{r4, pc}

08001ade <__sclose>:
 8001ade:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ae2:	f000 b94d 	b.w	8001d80 <_close_r>

08001ae6 <__swbuf_r>:
 8001ae6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ae8:	460e      	mov	r6, r1
 8001aea:	4614      	mov	r4, r2
 8001aec:	4605      	mov	r5, r0
 8001aee:	b118      	cbz	r0, 8001af8 <__swbuf_r+0x12>
 8001af0:	6a03      	ldr	r3, [r0, #32]
 8001af2:	b90b      	cbnz	r3, 8001af8 <__swbuf_r+0x12>
 8001af4:	f7ff fb10 	bl	8001118 <__sinit>
 8001af8:	69a3      	ldr	r3, [r4, #24]
 8001afa:	60a3      	str	r3, [r4, #8]
 8001afc:	89a3      	ldrh	r3, [r4, #12]
 8001afe:	071a      	lsls	r2, r3, #28
 8001b00:	d501      	bpl.n	8001b06 <__swbuf_r+0x20>
 8001b02:	6923      	ldr	r3, [r4, #16]
 8001b04:	b943      	cbnz	r3, 8001b18 <__swbuf_r+0x32>
 8001b06:	4621      	mov	r1, r4
 8001b08:	4628      	mov	r0, r5
 8001b0a:	f000 f82b 	bl	8001b64 <__swsetup_r>
 8001b0e:	b118      	cbz	r0, 8001b18 <__swbuf_r+0x32>
 8001b10:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8001b14:	4638      	mov	r0, r7
 8001b16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b18:	6823      	ldr	r3, [r4, #0]
 8001b1a:	6922      	ldr	r2, [r4, #16]
 8001b1c:	1a98      	subs	r0, r3, r2
 8001b1e:	6963      	ldr	r3, [r4, #20]
 8001b20:	b2f6      	uxtb	r6, r6
 8001b22:	4283      	cmp	r3, r0
 8001b24:	4637      	mov	r7, r6
 8001b26:	dc05      	bgt.n	8001b34 <__swbuf_r+0x4e>
 8001b28:	4621      	mov	r1, r4
 8001b2a:	4628      	mov	r0, r5
 8001b2c:	f7ff ff64 	bl	80019f8 <_fflush_r>
 8001b30:	2800      	cmp	r0, #0
 8001b32:	d1ed      	bne.n	8001b10 <__swbuf_r+0x2a>
 8001b34:	68a3      	ldr	r3, [r4, #8]
 8001b36:	3b01      	subs	r3, #1
 8001b38:	60a3      	str	r3, [r4, #8]
 8001b3a:	6823      	ldr	r3, [r4, #0]
 8001b3c:	1c5a      	adds	r2, r3, #1
 8001b3e:	6022      	str	r2, [r4, #0]
 8001b40:	701e      	strb	r6, [r3, #0]
 8001b42:	6962      	ldr	r2, [r4, #20]
 8001b44:	1c43      	adds	r3, r0, #1
 8001b46:	429a      	cmp	r2, r3
 8001b48:	d004      	beq.n	8001b54 <__swbuf_r+0x6e>
 8001b4a:	89a3      	ldrh	r3, [r4, #12]
 8001b4c:	07db      	lsls	r3, r3, #31
 8001b4e:	d5e1      	bpl.n	8001b14 <__swbuf_r+0x2e>
 8001b50:	2e0a      	cmp	r6, #10
 8001b52:	d1df      	bne.n	8001b14 <__swbuf_r+0x2e>
 8001b54:	4621      	mov	r1, r4
 8001b56:	4628      	mov	r0, r5
 8001b58:	f7ff ff4e 	bl	80019f8 <_fflush_r>
 8001b5c:	2800      	cmp	r0, #0
 8001b5e:	d0d9      	beq.n	8001b14 <__swbuf_r+0x2e>
 8001b60:	e7d6      	b.n	8001b10 <__swbuf_r+0x2a>
	...

08001b64 <__swsetup_r>:
 8001b64:	b538      	push	{r3, r4, r5, lr}
 8001b66:	4b29      	ldr	r3, [pc, #164]	@ (8001c0c <__swsetup_r+0xa8>)
 8001b68:	4605      	mov	r5, r0
 8001b6a:	6818      	ldr	r0, [r3, #0]
 8001b6c:	460c      	mov	r4, r1
 8001b6e:	b118      	cbz	r0, 8001b78 <__swsetup_r+0x14>
 8001b70:	6a03      	ldr	r3, [r0, #32]
 8001b72:	b90b      	cbnz	r3, 8001b78 <__swsetup_r+0x14>
 8001b74:	f7ff fad0 	bl	8001118 <__sinit>
 8001b78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001b7c:	0719      	lsls	r1, r3, #28
 8001b7e:	d422      	bmi.n	8001bc6 <__swsetup_r+0x62>
 8001b80:	06da      	lsls	r2, r3, #27
 8001b82:	d407      	bmi.n	8001b94 <__swsetup_r+0x30>
 8001b84:	2209      	movs	r2, #9
 8001b86:	602a      	str	r2, [r5, #0]
 8001b88:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001b8c:	81a3      	strh	r3, [r4, #12]
 8001b8e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001b92:	e033      	b.n	8001bfc <__swsetup_r+0x98>
 8001b94:	0758      	lsls	r0, r3, #29
 8001b96:	d512      	bpl.n	8001bbe <__swsetup_r+0x5a>
 8001b98:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001b9a:	b141      	cbz	r1, 8001bae <__swsetup_r+0x4a>
 8001b9c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001ba0:	4299      	cmp	r1, r3
 8001ba2:	d002      	beq.n	8001baa <__swsetup_r+0x46>
 8001ba4:	4628      	mov	r0, r5
 8001ba6:	f000 f90d 	bl	8001dc4 <_free_r>
 8001baa:	2300      	movs	r3, #0
 8001bac:	6363      	str	r3, [r4, #52]	@ 0x34
 8001bae:	89a3      	ldrh	r3, [r4, #12]
 8001bb0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001bb4:	81a3      	strh	r3, [r4, #12]
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	6063      	str	r3, [r4, #4]
 8001bba:	6923      	ldr	r3, [r4, #16]
 8001bbc:	6023      	str	r3, [r4, #0]
 8001bbe:	89a3      	ldrh	r3, [r4, #12]
 8001bc0:	f043 0308 	orr.w	r3, r3, #8
 8001bc4:	81a3      	strh	r3, [r4, #12]
 8001bc6:	6923      	ldr	r3, [r4, #16]
 8001bc8:	b94b      	cbnz	r3, 8001bde <__swsetup_r+0x7a>
 8001bca:	89a3      	ldrh	r3, [r4, #12]
 8001bcc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001bd0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001bd4:	d003      	beq.n	8001bde <__swsetup_r+0x7a>
 8001bd6:	4621      	mov	r1, r4
 8001bd8:	4628      	mov	r0, r5
 8001bda:	f000 f83f 	bl	8001c5c <__smakebuf_r>
 8001bde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001be2:	f013 0201 	ands.w	r2, r3, #1
 8001be6:	d00a      	beq.n	8001bfe <__swsetup_r+0x9a>
 8001be8:	2200      	movs	r2, #0
 8001bea:	60a2      	str	r2, [r4, #8]
 8001bec:	6962      	ldr	r2, [r4, #20]
 8001bee:	4252      	negs	r2, r2
 8001bf0:	61a2      	str	r2, [r4, #24]
 8001bf2:	6922      	ldr	r2, [r4, #16]
 8001bf4:	b942      	cbnz	r2, 8001c08 <__swsetup_r+0xa4>
 8001bf6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001bfa:	d1c5      	bne.n	8001b88 <__swsetup_r+0x24>
 8001bfc:	bd38      	pop	{r3, r4, r5, pc}
 8001bfe:	0799      	lsls	r1, r3, #30
 8001c00:	bf58      	it	pl
 8001c02:	6962      	ldrpl	r2, [r4, #20]
 8001c04:	60a2      	str	r2, [r4, #8]
 8001c06:	e7f4      	b.n	8001bf2 <__swsetup_r+0x8e>
 8001c08:	2000      	movs	r0, #0
 8001c0a:	e7f7      	b.n	8001bfc <__swsetup_r+0x98>
 8001c0c:	2000000c 	.word	0x2000000c

08001c10 <__swhatbuf_r>:
 8001c10:	b570      	push	{r4, r5, r6, lr}
 8001c12:	460c      	mov	r4, r1
 8001c14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001c18:	2900      	cmp	r1, #0
 8001c1a:	b096      	sub	sp, #88	@ 0x58
 8001c1c:	4615      	mov	r5, r2
 8001c1e:	461e      	mov	r6, r3
 8001c20:	da0d      	bge.n	8001c3e <__swhatbuf_r+0x2e>
 8001c22:	89a3      	ldrh	r3, [r4, #12]
 8001c24:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001c28:	f04f 0100 	mov.w	r1, #0
 8001c2c:	bf14      	ite	ne
 8001c2e:	2340      	movne	r3, #64	@ 0x40
 8001c30:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001c34:	2000      	movs	r0, #0
 8001c36:	6031      	str	r1, [r6, #0]
 8001c38:	602b      	str	r3, [r5, #0]
 8001c3a:	b016      	add	sp, #88	@ 0x58
 8001c3c:	bd70      	pop	{r4, r5, r6, pc}
 8001c3e:	466a      	mov	r2, sp
 8001c40:	f000 f8ae 	bl	8001da0 <_fstat_r>
 8001c44:	2800      	cmp	r0, #0
 8001c46:	dbec      	blt.n	8001c22 <__swhatbuf_r+0x12>
 8001c48:	9901      	ldr	r1, [sp, #4]
 8001c4a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001c4e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001c52:	4259      	negs	r1, r3
 8001c54:	4159      	adcs	r1, r3
 8001c56:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001c5a:	e7eb      	b.n	8001c34 <__swhatbuf_r+0x24>

08001c5c <__smakebuf_r>:
 8001c5c:	898b      	ldrh	r3, [r1, #12]
 8001c5e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001c60:	079d      	lsls	r5, r3, #30
 8001c62:	4606      	mov	r6, r0
 8001c64:	460c      	mov	r4, r1
 8001c66:	d507      	bpl.n	8001c78 <__smakebuf_r+0x1c>
 8001c68:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001c6c:	6023      	str	r3, [r4, #0]
 8001c6e:	6123      	str	r3, [r4, #16]
 8001c70:	2301      	movs	r3, #1
 8001c72:	6163      	str	r3, [r4, #20]
 8001c74:	b003      	add	sp, #12
 8001c76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c78:	ab01      	add	r3, sp, #4
 8001c7a:	466a      	mov	r2, sp
 8001c7c:	f7ff ffc8 	bl	8001c10 <__swhatbuf_r>
 8001c80:	9f00      	ldr	r7, [sp, #0]
 8001c82:	4605      	mov	r5, r0
 8001c84:	4639      	mov	r1, r7
 8001c86:	4630      	mov	r0, r6
 8001c88:	f7ff fc26 	bl	80014d8 <_malloc_r>
 8001c8c:	b948      	cbnz	r0, 8001ca2 <__smakebuf_r+0x46>
 8001c8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001c92:	059a      	lsls	r2, r3, #22
 8001c94:	d4ee      	bmi.n	8001c74 <__smakebuf_r+0x18>
 8001c96:	f023 0303 	bic.w	r3, r3, #3
 8001c9a:	f043 0302 	orr.w	r3, r3, #2
 8001c9e:	81a3      	strh	r3, [r4, #12]
 8001ca0:	e7e2      	b.n	8001c68 <__smakebuf_r+0xc>
 8001ca2:	89a3      	ldrh	r3, [r4, #12]
 8001ca4:	6020      	str	r0, [r4, #0]
 8001ca6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001caa:	81a3      	strh	r3, [r4, #12]
 8001cac:	9b01      	ldr	r3, [sp, #4]
 8001cae:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001cb2:	b15b      	cbz	r3, 8001ccc <__smakebuf_r+0x70>
 8001cb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001cb8:	4630      	mov	r0, r6
 8001cba:	f000 f80b 	bl	8001cd4 <_isatty_r>
 8001cbe:	b128      	cbz	r0, 8001ccc <__smakebuf_r+0x70>
 8001cc0:	89a3      	ldrh	r3, [r4, #12]
 8001cc2:	f023 0303 	bic.w	r3, r3, #3
 8001cc6:	f043 0301 	orr.w	r3, r3, #1
 8001cca:	81a3      	strh	r3, [r4, #12]
 8001ccc:	89a3      	ldrh	r3, [r4, #12]
 8001cce:	431d      	orrs	r5, r3
 8001cd0:	81a5      	strh	r5, [r4, #12]
 8001cd2:	e7cf      	b.n	8001c74 <__smakebuf_r+0x18>

08001cd4 <_isatty_r>:
 8001cd4:	b538      	push	{r3, r4, r5, lr}
 8001cd6:	4d06      	ldr	r5, [pc, #24]	@ (8001cf0 <_isatty_r+0x1c>)
 8001cd8:	2300      	movs	r3, #0
 8001cda:	4604      	mov	r4, r0
 8001cdc:	4608      	mov	r0, r1
 8001cde:	602b      	str	r3, [r5, #0]
 8001ce0:	f7ff f8eb 	bl	8000eba <_isatty>
 8001ce4:	1c43      	adds	r3, r0, #1
 8001ce6:	d102      	bne.n	8001cee <_isatty_r+0x1a>
 8001ce8:	682b      	ldr	r3, [r5, #0]
 8001cea:	b103      	cbz	r3, 8001cee <_isatty_r+0x1a>
 8001cec:	6023      	str	r3, [r4, #0]
 8001cee:	bd38      	pop	{r3, r4, r5, pc}
 8001cf0:	200001c4 	.word	0x200001c4

08001cf4 <_lseek_r>:
 8001cf4:	b538      	push	{r3, r4, r5, lr}
 8001cf6:	4d07      	ldr	r5, [pc, #28]	@ (8001d14 <_lseek_r+0x20>)
 8001cf8:	4604      	mov	r4, r0
 8001cfa:	4608      	mov	r0, r1
 8001cfc:	4611      	mov	r1, r2
 8001cfe:	2200      	movs	r2, #0
 8001d00:	602a      	str	r2, [r5, #0]
 8001d02:	461a      	mov	r2, r3
 8001d04:	f7ff f8e4 	bl	8000ed0 <_lseek>
 8001d08:	1c43      	adds	r3, r0, #1
 8001d0a:	d102      	bne.n	8001d12 <_lseek_r+0x1e>
 8001d0c:	682b      	ldr	r3, [r5, #0]
 8001d0e:	b103      	cbz	r3, 8001d12 <_lseek_r+0x1e>
 8001d10:	6023      	str	r3, [r4, #0]
 8001d12:	bd38      	pop	{r3, r4, r5, pc}
 8001d14:	200001c4 	.word	0x200001c4

08001d18 <_read_r>:
 8001d18:	b538      	push	{r3, r4, r5, lr}
 8001d1a:	4d07      	ldr	r5, [pc, #28]	@ (8001d38 <_read_r+0x20>)
 8001d1c:	4604      	mov	r4, r0
 8001d1e:	4608      	mov	r0, r1
 8001d20:	4611      	mov	r1, r2
 8001d22:	2200      	movs	r2, #0
 8001d24:	602a      	str	r2, [r5, #0]
 8001d26:	461a      	mov	r2, r3
 8001d28:	f7ff f88e 	bl	8000e48 <_read>
 8001d2c:	1c43      	adds	r3, r0, #1
 8001d2e:	d102      	bne.n	8001d36 <_read_r+0x1e>
 8001d30:	682b      	ldr	r3, [r5, #0]
 8001d32:	b103      	cbz	r3, 8001d36 <_read_r+0x1e>
 8001d34:	6023      	str	r3, [r4, #0]
 8001d36:	bd38      	pop	{r3, r4, r5, pc}
 8001d38:	200001c4 	.word	0x200001c4

08001d3c <_sbrk_r>:
 8001d3c:	b538      	push	{r3, r4, r5, lr}
 8001d3e:	4d06      	ldr	r5, [pc, #24]	@ (8001d58 <_sbrk_r+0x1c>)
 8001d40:	2300      	movs	r3, #0
 8001d42:	4604      	mov	r4, r0
 8001d44:	4608      	mov	r0, r1
 8001d46:	602b      	str	r3, [r5, #0]
 8001d48:	f7ff f8d0 	bl	8000eec <_sbrk>
 8001d4c:	1c43      	adds	r3, r0, #1
 8001d4e:	d102      	bne.n	8001d56 <_sbrk_r+0x1a>
 8001d50:	682b      	ldr	r3, [r5, #0]
 8001d52:	b103      	cbz	r3, 8001d56 <_sbrk_r+0x1a>
 8001d54:	6023      	str	r3, [r4, #0]
 8001d56:	bd38      	pop	{r3, r4, r5, pc}
 8001d58:	200001c4 	.word	0x200001c4

08001d5c <_write_r>:
 8001d5c:	b538      	push	{r3, r4, r5, lr}
 8001d5e:	4d07      	ldr	r5, [pc, #28]	@ (8001d7c <_write_r+0x20>)
 8001d60:	4604      	mov	r4, r0
 8001d62:	4608      	mov	r0, r1
 8001d64:	4611      	mov	r1, r2
 8001d66:	2200      	movs	r2, #0
 8001d68:	602a      	str	r2, [r5, #0]
 8001d6a:	461a      	mov	r2, r3
 8001d6c:	f7fe ff6a 	bl	8000c44 <_write>
 8001d70:	1c43      	adds	r3, r0, #1
 8001d72:	d102      	bne.n	8001d7a <_write_r+0x1e>
 8001d74:	682b      	ldr	r3, [r5, #0]
 8001d76:	b103      	cbz	r3, 8001d7a <_write_r+0x1e>
 8001d78:	6023      	str	r3, [r4, #0]
 8001d7a:	bd38      	pop	{r3, r4, r5, pc}
 8001d7c:	200001c4 	.word	0x200001c4

08001d80 <_close_r>:
 8001d80:	b538      	push	{r3, r4, r5, lr}
 8001d82:	4d06      	ldr	r5, [pc, #24]	@ (8001d9c <_close_r+0x1c>)
 8001d84:	2300      	movs	r3, #0
 8001d86:	4604      	mov	r4, r0
 8001d88:	4608      	mov	r0, r1
 8001d8a:	602b      	str	r3, [r5, #0]
 8001d8c:	f7ff f879 	bl	8000e82 <_close>
 8001d90:	1c43      	adds	r3, r0, #1
 8001d92:	d102      	bne.n	8001d9a <_close_r+0x1a>
 8001d94:	682b      	ldr	r3, [r5, #0]
 8001d96:	b103      	cbz	r3, 8001d9a <_close_r+0x1a>
 8001d98:	6023      	str	r3, [r4, #0]
 8001d9a:	bd38      	pop	{r3, r4, r5, pc}
 8001d9c:	200001c4 	.word	0x200001c4

08001da0 <_fstat_r>:
 8001da0:	b538      	push	{r3, r4, r5, lr}
 8001da2:	4d07      	ldr	r5, [pc, #28]	@ (8001dc0 <_fstat_r+0x20>)
 8001da4:	2300      	movs	r3, #0
 8001da6:	4604      	mov	r4, r0
 8001da8:	4608      	mov	r0, r1
 8001daa:	4611      	mov	r1, r2
 8001dac:	602b      	str	r3, [r5, #0]
 8001dae:	f7ff f874 	bl	8000e9a <_fstat>
 8001db2:	1c43      	adds	r3, r0, #1
 8001db4:	d102      	bne.n	8001dbc <_fstat_r+0x1c>
 8001db6:	682b      	ldr	r3, [r5, #0]
 8001db8:	b103      	cbz	r3, 8001dbc <_fstat_r+0x1c>
 8001dba:	6023      	str	r3, [r4, #0]
 8001dbc:	bd38      	pop	{r3, r4, r5, pc}
 8001dbe:	bf00      	nop
 8001dc0:	200001c4 	.word	0x200001c4

08001dc4 <_free_r>:
 8001dc4:	b538      	push	{r3, r4, r5, lr}
 8001dc6:	4605      	mov	r5, r0
 8001dc8:	2900      	cmp	r1, #0
 8001dca:	d041      	beq.n	8001e50 <_free_r+0x8c>
 8001dcc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001dd0:	1f0c      	subs	r4, r1, #4
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	bfb8      	it	lt
 8001dd6:	18e4      	addlt	r4, r4, r3
 8001dd8:	f7ff fe36 	bl	8001a48 <__malloc_lock>
 8001ddc:	4a1d      	ldr	r2, [pc, #116]	@ (8001e54 <_free_r+0x90>)
 8001dde:	6813      	ldr	r3, [r2, #0]
 8001de0:	b933      	cbnz	r3, 8001df0 <_free_r+0x2c>
 8001de2:	6063      	str	r3, [r4, #4]
 8001de4:	6014      	str	r4, [r2, #0]
 8001de6:	4628      	mov	r0, r5
 8001de8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001dec:	f7ff be32 	b.w	8001a54 <__malloc_unlock>
 8001df0:	42a3      	cmp	r3, r4
 8001df2:	d908      	bls.n	8001e06 <_free_r+0x42>
 8001df4:	6820      	ldr	r0, [r4, #0]
 8001df6:	1821      	adds	r1, r4, r0
 8001df8:	428b      	cmp	r3, r1
 8001dfa:	bf01      	itttt	eq
 8001dfc:	6819      	ldreq	r1, [r3, #0]
 8001dfe:	685b      	ldreq	r3, [r3, #4]
 8001e00:	1809      	addeq	r1, r1, r0
 8001e02:	6021      	streq	r1, [r4, #0]
 8001e04:	e7ed      	b.n	8001de2 <_free_r+0x1e>
 8001e06:	461a      	mov	r2, r3
 8001e08:	685b      	ldr	r3, [r3, #4]
 8001e0a:	b10b      	cbz	r3, 8001e10 <_free_r+0x4c>
 8001e0c:	42a3      	cmp	r3, r4
 8001e0e:	d9fa      	bls.n	8001e06 <_free_r+0x42>
 8001e10:	6811      	ldr	r1, [r2, #0]
 8001e12:	1850      	adds	r0, r2, r1
 8001e14:	42a0      	cmp	r0, r4
 8001e16:	d10b      	bne.n	8001e30 <_free_r+0x6c>
 8001e18:	6820      	ldr	r0, [r4, #0]
 8001e1a:	4401      	add	r1, r0
 8001e1c:	1850      	adds	r0, r2, r1
 8001e1e:	4283      	cmp	r3, r0
 8001e20:	6011      	str	r1, [r2, #0]
 8001e22:	d1e0      	bne.n	8001de6 <_free_r+0x22>
 8001e24:	6818      	ldr	r0, [r3, #0]
 8001e26:	685b      	ldr	r3, [r3, #4]
 8001e28:	6053      	str	r3, [r2, #4]
 8001e2a:	4408      	add	r0, r1
 8001e2c:	6010      	str	r0, [r2, #0]
 8001e2e:	e7da      	b.n	8001de6 <_free_r+0x22>
 8001e30:	d902      	bls.n	8001e38 <_free_r+0x74>
 8001e32:	230c      	movs	r3, #12
 8001e34:	602b      	str	r3, [r5, #0]
 8001e36:	e7d6      	b.n	8001de6 <_free_r+0x22>
 8001e38:	6820      	ldr	r0, [r4, #0]
 8001e3a:	1821      	adds	r1, r4, r0
 8001e3c:	428b      	cmp	r3, r1
 8001e3e:	bf04      	itt	eq
 8001e40:	6819      	ldreq	r1, [r3, #0]
 8001e42:	685b      	ldreq	r3, [r3, #4]
 8001e44:	6063      	str	r3, [r4, #4]
 8001e46:	bf04      	itt	eq
 8001e48:	1809      	addeq	r1, r1, r0
 8001e4a:	6021      	streq	r1, [r4, #0]
 8001e4c:	6054      	str	r4, [r2, #4]
 8001e4e:	e7ca      	b.n	8001de6 <_free_r+0x22>
 8001e50:	bd38      	pop	{r3, r4, r5, pc}
 8001e52:	bf00      	nop
 8001e54:	200001c0 	.word	0x200001c0

08001e58 <_init>:
 8001e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e5a:	bf00      	nop
 8001e5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001e5e:	bc08      	pop	{r3}
 8001e60:	469e      	mov	lr, r3
 8001e62:	4770      	bx	lr

08001e64 <_fini>:
 8001e64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e66:	bf00      	nop
 8001e68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001e6a:	bc08      	pop	{r3}
 8001e6c:	469e      	mov	lr, r3
 8001e6e:	4770      	bx	lr
